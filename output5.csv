name,response
Windows File Download Via CertUtil,"SEARCH process creation telemetry from Windows endpoints and EDR sources (e.g., Windows Security 4688, Sysmon Event ID 1, EDR process events), capturing fields such as event_time, host, user, user_id, vendor_product, action/outcome, process_name, process_path, process_command_line, process_id, process_guid, process_hash, process_integrity_level, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid
| FILTER events where the outcome indicates a new process was created or started
| FILTER events where the process represents CertUtil execution, such as:
  - process_name equals ""certutil.exe"" OR
  - original_file_name equals ""CertUtil.exe"" OR
  - process_path ends with ""\certutil.exe"" OR
  - process_command_line contains the token ""certutil"
Windows Credential Access From Browser Password Store,
Detect Computer Changed with Anonymous Account,"SEARCH Windows Security event records from data sources: Windows Event Log Security 4624 and Windows Event Log Security 4742
| FILTER events where event_id equals 4624 OR event_id equals 4742
| FILTER events where TargetUserName equals ""ANONYMOUS LOGON""
| FILTER events where LogonType equals 3
| GROUP records by action, app, authentication_method, dest, dvc, process, process_id, process_name, process_path, signature, signature_id, src, src_port, status, subject, user, user_group, vendor_product
| COMPUTE count as number of records per group, firstTime as earliest event timestamp per group, lastTime as latest event timestamp per group
| FORMAT firstTime and lastTime as human-readable timestamps
| APPLY environment-specific allowlists or suppression rules to remove known benign patterns
| OUTPUT grouped fields with count, firstTime, and lastTime"
Windows Password Managers Discovery,
Windows Suspicious Process File Path,
Allow Network Discovery In Firewall,"SEARCH endpoint process creation events from EDR and OS logs

| FILTER events where process_name equals ""netsh.exe"" OR original_file_name equals ""netsh.exe"" OR process_command_line contains ""netsh""

| FILTER events where process_command_line contains ""firewall""

| FILTER events where process_command_line contains 'group=""Network Discovery""' OR process_command_line contains ""group=Network Discovery""

| FILTER events where process_command_line contains ""enable""

| FILTER events where process_command_line contains ""Yes"" (case-insensitive)

| FILTER events where action indicates a successful process start (if such a field exists)

| GROUP BY action, host, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_executable, process_command_line, process_ex"
Suspicious writes to windows Recycle Bin,
Windows Special Privileged Logon On Multiple Hosts,"SEARCH Windows Security events where event_id equals 4672
| PARSE fields: timestamp, Caller_User_Name, Computer, PrivilegeList
| FILTER records where Caller_User_Name is not any of [""DWM-1"",""DWM-2"",""DWM-3"",""LOCAL SERVICE"",""NETWORK SERVICE"",""SYSTEM""] and Caller_User_Name does not end with ""$""
| GROUP records into 5-minute time windows based on timestamp and by Caller_User_Name
| COMPUTE per group: unique_targets = count_distinct(Computer), dest = distinct_values(Computer), privileges = distinct_values(PrivilegeList)
| FILTER groups where unique_targets > 30
| FORMAT rename Caller_User_Name to user
| OUTPUT fields: time_window_start, user, unique_targets, dest, privileges"
Windows Modify Registry USeWuServer,"SEARCH registry modification events from Windows endpoints (e.g., Sysmon Event ID 13) within the desired time range | FILTER registry_path ends with ""\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU\UseWUServer"" (case-insensitive) | FILTER registry_value_data"
Windows Detect Network Scanner Behavior,
MSI Module Loaded by Non-System Binary,"SEARCH Sysmon DLL-load events (event type/code indicating module load) within the desired time window
| FILTER events where loaded module path (ImageLoaded) case-insensitively ends with ""\msi.dll""
| FILTER out events where the process executable path (Image) resides under typical system directories (case-insensitive path contains any of: ""\Windows\System32\"", ""\Windows\SysWOW64\"", ""\Windows\"", ""\Windows\WinSxS\"")
| HANDLE MISSING by replacing null values in the following fields with a placeholder to stabilize grouping: Image, ImageLoaded, dest, loaded_file, loaded_file_path, original_file_name, process_exec, process_guid, process_hash, process_id, process_name, process_path, service_dll_signature_exists, service_dll_signature_verified, signature, signature_id, user_id, vendor_product
| GROUP events by Image, ImageLoaded, dest, loaded_file, loaded_file_path, original_file_name, process_exec, process_guid, process_hash, process_id, process_name, process_path, service_dll_signature_exists, service_dll_signature_verified, signature, signature_id, user_id, vendor_product
| COMPUTE per-group metrics: total event count; earliest event timestamp as firstTime; latest event timestamp as lastTime
| FORMAT firstTime and lastTime into human-readable timestamps
| APPLY environment-specific allowlist/suppression rules to exclude known legitimate binaries or paths if available
| OUTPUT the grouped fields with count, firstTime, and lastTime"
Linux Stdout Redirection To Dev Null File,"SEARCH endpoint process execution events from EDR telemetry within the desired time range
| PARSE fields: timestamp, host, vendor_product, action, user, user_id, process_command_line, process_name, process_path, process_id, process_guid, process_hash, process_integrity_level, process_exec, original_file_name, parent_process_command_line, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_exec
| FILTER events where process_command_line contains the substring ""&>/dev/null""
| GROUP events by host, vendor_product, action, user, user_id, original_file_name, process_command_line, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, parent_process_command_line, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path
| COMPUTE count of events per group
| COMPUTE earliest timestamp per group as firstTime and latest timestamp per group as lastTime
| DERIVE human-readable representations of firstTime and lastTime
| APPLY environment-specific allowlist or suppression rules to exclude known benign command lines or processes (if available)
| OUTPUT grouped fields with count, firstTime, and lastTime"
Windows SQL Server Startup Procedure,"SEARCH Windows Event Log (Application channel) events
| FILTER event_code == 17135
| PARSE field EventData_Xml to extract startup_procedure from the content between <Data> and </Data> tags that contains the stored procedure name
| DERIVE dest = host
| DERIVE lower_startup_procedure = lowercase(startup_procedure)
| DERIVE risk_score = 90 if lower_startup_procedure matches any of [""xp_"", ""sp_"", ""cmdshell"", ""shell"", ""exec""] else 70
| DERIVE risk_message = ""SQL Server startup procedure '"" + startup_procedure + ""' was launched on host "" + dest
| GROUP BY dest, event_code, startup_procedure, risk_message, risk_score AGGREGATE total_events = count(), firstTime = min(event_time), lastTime = max(event_time)
| FORMAT firstTime, lastTime as human_readable_timestamps
| OUTPUT dest, event_code, startup_procedure, risk_score, risk_message, total_events, firstTime, lastTime"
BCDEdit Failure Recovery Modification,
Linux Deleting Critical Directory Using RM Command,"SEARCH process execution events from endpoint telemetry that include command-line details

| FILTER events where process_name equals ""rm""

| FILTER events where process_command_line contains the argument ""-rf"" (as a standalone flag or within a combined flag set)

| FILTER events where process_command_line includes a target path under any of: ""/boot"", ""/var/log"", ""/etc"", or ""/dev"" (e.g., paths starting with these directories)

| GROUP remaining events BY
  - action/outcome
  - host/device
  - process.original_file_name
  - parent.process.command_line
  - parent.process.executable_path
  - parent.process.guid
  - parent.process.id
  - parent.process.name
  - parent.process.path
  - process.command_line
  - process.executable_path
  - process.guid
  - process.hash
  - process.id
  - process.integrity_level
  - process.name
  - process.path
  - user.name
  - user.id
  - vendor_product

| COMPUTE for each group:
  - event_count = number of events in the group
  - first_seen_time = minimum event_time
  - last_seen_time = maximum event_time

| FORMAT first_seen_time and last_seen_time as human-readable timestamps

| APPLY environment-specific allowlist or suppression rules to exclude known benign rm operations (optional)

| OUTPUT one record per group including all group-by fields plus event_count, first_seen_time, and last_seen_time"
Windows System Reboot CommandLine,
Create Remote Thread In Shell Application,"SEARCH events from endpoint monitoring that record remote thread creation (for example, Sysmon CreateRemoteThread with EventID = 8) |
FILTER where TargetImage path matches any of:
- ends with ""\cmd.exe""
- contains ""\powershell"" (case-insensitive)
- ends with ""\pwsh.exe"" (case-insensitive) |
GROUP records by the following fields:
EventID, Guid, NewThreadId, ProcessID, SecurityID, SourceImage, SourceProcessGuid, SourceProcessId, StartAddress, StartFunction, StartModule, TargetImage, TargetProcessGuid, TargetProcessId, UserID, dest, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product |
COMPUTE count = number of records in each group |
DERIVE firstTime = earliest timestamp in each group; lastTime = latest timestamp in each group |
DERIVE firstTime_readable = human-readable representation of firstTime; lastTime_readable = human-readable representation of lastTime |
APPLY environment-specific suppression to exclude known benign or expected remote-thread activity based on fields such as SourceImage, TargetImage, StartModule, StartFunction, User, parent process metadata, digital signature, or device name |
OUTPUT count, firstTime, last"
Disable Windows Behavior Monitoring,
Spoolsv Writing a DLL,"SEARCH process execution events | FILTER process_name equals ""spoolsv.exe"" | SELECT fields: event_time, destination, process_guid, process_name, process_path, process_id, parent_process_name, parent_process_id, parent_process_path, user, user_id, integrity_level, action, original_file_name, process_hash

| SEARCH filesystem events (file creation/modification) | FILTER file_path contains ""\spool\drivers\x64\"" AND file_name ends with "".dll"" | SELECT fields: event_time, destination, process_guid, file_create_time, file"
Windows ESX Admins Group Creation Security Event,"SEARCH Windows Security Event Logs for events with EventCode in [4727, 4730, 4737] |
FILTER records where TargetUserName equals ""ESX Admins"" OR TargetUserName contains the substring ""ESX Admins"" |
PARSE fields needed: EventCode, TargetUserName, TargetDomainName, SubjectUserName, SubjectDomainName, Computer, event timestamp |
GROUP records BY EventCode, TargetUserName, TargetDomainName, SubjectUserName, SubjectDomainName, Computer AGGREGATE count = number of records, firstTime = earliest event timestamp, lastTime = latest event timestamp |
DERIVE EventCodeDescription = 
  if EventCode == 4727 then ""Security Enabled Global Group Created""
  else if EventCode == 4730 then ""Security Enabled Global Group Deleted""
  else if EventCode == 4737 then ""Security Enabled Global Group Modified"" |
DERIVE firstTimeReadable = format firstTime as human-readable datetime, lastTimeReadable = format lastTime as human-readable datetime |
APPLY optional environment-specific allowlist/suppression filters if available |
OUTPUT fields: EventCode, EventCodeDescription, TargetUserName, TargetDomainName, SubjectUserName, SubjectDomainName, Computer, count, firstTime, lastTime, firstTimeReadable, lastTimeReadable"
Outbound Network Connection from Java Using Default Ports,
Access LSASS Memory for Dump Creation,
Excessive Usage Of Cacls App,
Ntdsutil Export NTDS,"SEARCH endpoint process execution events from sources [Sysmon Event ID 1, Windows Security 4688, EDR process telemetry such as CrowdStrike ProcessRollup2] within the desired time range
| FILTER events where process_name equals ""ntdsutil.exe"" (case-insensitive)
| FILTER events where command_line contains ""ntds"" AND command_line contains ""create"" (case-insensitive)
| GROUP records by the following fields: action, device_hostname, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, command_line, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product
| COMPUTE event_count = count(), first_time = minimum(event_time), last_time = maximum(event_time)
| DERIVE first_time_readable = convert_timestamp_to_readable(first_time), last_time_readable = convert_timestamp_to_readable(last_time)
| APPLY environment-specific allowlists or benign-use filters for legitimate NTDS database maintenance, if defined
| OUTPUT the grouped fields along with event_count, first_time"
Windows Time Based Evasion,
Windows Impair Defense Delete Win Defender Profile Registry,"SEARCH registry modification events from endpoint telemetry (e.g., Windows registry auditing or Sysmon) |
PARSE fields: event_time, action, dest (endpoint/host), process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, log_source |
FILTER events where action equals ""deleted"" |
FILTER events where registry_path case-insensitively contains ""\Policies\Microsoft\Windows Defender"" |
GROUP records by action, dest, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, log_source |
COMPUTE count = number of events per group; first_time = minimum(event_time); last_time = maximum(event_time) |
FORMAT first_time and last_time as human-readable timestamps |
APPLY"
Windows Registry SIP Provider Modification,"SEARCH endpoint registry modification events (e.g., registry value set/write) from hosts

| FILTER records where registry_path matches any of:
  - *\SOFTWARE\Microsoft\Cryptography\Providers\*
  - *\SOFTWARE\Microsoft\Cryptography\OID\EncodingType*
  - *\SOFTWARE\WOW6432Node\Microsoft\Cryptography\Providers\*
  - *\SOFTWARE\WOW6432Node\Microsoft\Cryptography\OID\EncodingType*

| FILTER records where registry_value_name equals ""Dll"" OR equals ""$DLL""

| GROUP records BY:
  - action (e.g., set value/write)
  - host
  - process_guid
  - process_id
  - registry_hive
  - registry_path
  - registry_key_name
  - registry_value_name
  - registry_value_type
  - registry_value_data
  - user
  - vendor_product

| COMPUTE for each group:
  - event_count = number of"
AdsiSearcher Account Discovery,"SEARCH events FROM ""PowerShell Script Block Logging"" WHERE EventCode == 4104 | FILTER ScriptBlockText CONTAINS ""[adsisearcher]"" (case-insensitive) | FILTER ScriptBlockText CONTAINS ""objectcategory=user"" | FILTER ScriptBlockText CONTAINS "".findAll()"" | APPLY default empty string TO missing values in [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] | GROUP BY dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText COMPUTE event_count = COUNT(), first_seen = MIN(timestamp), last_seen = MAX(timestamp) | DERIVE first_seen_readable = CONVERT_TIMESTAMP(first_seen), last_seen_readable = CONVERT_TIMESTAMP(last_seen) | APPLY optional exclusion filters using maintained allowlists of known-benign scripts, processes, or paths | OUTPUT dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, event_count, first_seen, last_seen, first"
Windows Information Discovery Fsutil,
Windows Boot or Logon Autostart Execution In Startup Folder,"SEARCH endpoint file system activity events
| FILTER records where file_path contains ""\Microsoft\Windows\Start Menu\Programs\Startup\""
| GROUP BY action, dest, file_access_time, file_create_time, file_hash, file_modify_time, file_name, file_path, file_acl, file_size, process_guid, process_id, user, vendor_product
| COMPUTE count = number of records per group, firstTime = minimum event_time per group, lastTime = maximum event_time per group
| DERIVE firstTime_readable = convert_timestamp(firstTime), lastTime_readable = convert_timestamp(lastTime)
| APPLY environment-specific allowlist/suppression to remove known benign files or processes in this directory
| OUTPUT action, dest, file_access_time, file_create_time, file_hash, file_modify_time, file_name, file_path, file_acl, file_size, process_guid, process_id, user, vendor_product, count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Loading Of Dynwrapx Module,"SEARCH dataset containing Sysmon module-load events (Event ID 7) within the desired time range |
FILTER records where any of the following is true (case-insensitive): ImageLoaded contains the filename ""dynwrapx.dll""; OR original_file_name equals ""dynwrapx.dll""; OR product equals ""DynamicWrapperX"" |
DERIVE replacements for missing values in fields [Image, ImageLoaded, dest, loaded_file, loaded_file_path, original_file_name, process_exec, process_guid, process_hash, process_id, process_name, process_path, service_dll_signature_exists, service_dll_signature_verified, signature, signature_id, user_id, vendor_product] to ensure consistent grouping |
GROUP records BY Image, ImageLoaded, dest, loaded_file, loaded_file_path, original_file_name, process_exec, process_guid, process_hash, process_id, process_name, process_path, service_dll_signature_exists, service_dll_signature_verified, signature, signature_id, user_id, vendor_product |
COMPUTE event_count for each group, firstTime as the minimum event timestamp, and lastTime as the maximum event timestamp |
FORMAT firstTime and lastTime as human-readable timestamps |
APPLY environment-specific suppression rules to remove known benign or expected module loads (for example, based on process_path, signature verification status, vendor_product, or approved allowlists) |
OUTPUT the grouped fields along with event_count, firstTime, and lastTime"
Windows Process Writing File to World Writable Path,SEARCH endpoint file creation events from EDR/endpoint telemetry on
Linux Auditd Doas Tool Execution,"SEARCH events from the Linux Auditd Syscall data source
| FILTER events where event.type equals ""SYSCALL""
| FILTER events where process command name (comm) equals ""doas""
| PARSE fields required for analysis: host, comm, exe, syscall, uid, ppid, pid, success, event_time
| DERIVE dest = host
| GROUP BY comm, exe, syscall, uid, ppid, pid, success, dest AGGREGATE count as executions, minimum(event_time) as firstTime, maximum(event_time) as lastTime
| COMPUTE firstTime_readable = convert firstTime to human-readable time, lastTime_readable = convert lastTime to human-readable time
| APPLY optional allowlist/suppression to remove known benign doas executions
| OUTPUT dest, comm, exe, syscall, uid, ppid, pid, success, executions, firstTime, lastTime, firstTime_readable, lastTime_readable"
Detect Regsvcs with No Command Line Arguments,
Linux pkexec Privilege Escalation,"SEARCH process creation telemetry from Linux endpoints (e.g., EDR or audit-based process events)
| PARSE fields: timestamp, action, host, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_command_line, process_exec, process_guid, process_hash, process_id"
Ping Sleep Batch Command,
Possible Browser Pass View Parameter,
Linux Auditd Service Restarted,"SEARCH Linux Auditd process execution events |
PARSE fields: timestamp, host, proctitle |
FILTER proctitle contains ""systemctl "" OR proctitle contains ""service "" |
FILTER proctitle contains any of [""restart"", ""reenable"", ""reload""] |
DERIVE dest = host |
GROUP BY proctitle, dest COMPUTE count = number of events, firstTime = earliest timestamp, lastTime = latest timestamp |
DERIVE firstTime_readable = convert firstTime to human-readable, lastTime_readable = convert lastTime to human-readable |
OUTPUT fields: proctitle, dest, count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Linux Auditd Preload Hijack Library Calls,"SEARCH Linux Auditd Execve process execution events that include fields: timestamp, host, execve_command, argc
| FILTER records where execve_command contains the substring ""LD_PRELOAD"" (case-insensitive)
| GROUP records by host, execve_command, argc
| COMPUTE for each group: total_count = number of records, firstTime = minimum timestamp, lastTime = maximum timestamp
| FORMAT firstTime and lastTime as human-readable timestamps
| APPLY environment-specific allowlists or suppression rules to reduce known benign uses
| OUTPUT host, execve_command, argc, total_count, firstTime, lastTime"
Windows Defender ASR Registry Modification,
Windows Delete or Modify System Firewall,
Windows File Download Via PowerShell,
Network Discovery Using Route Windows App,"SEARCH process creation events from endpoint and operating system telemetry sources (e.g., Sysmon EventID 1, Windows Security 4688, EDR process data)
| FILTER event_type equals ""process_creation""
| FILTER process_name equals ""route.exe"" (case-insensitive) OR original_file_name equals ""route.exe"" (case-insensitive)
| GROUP BY
  - action
  - host
  - original_file_name
  - parent_process_name
  - parent_process_path
  - parent_process_id
  - parent_process_guid
  - parent_process_executable
  - process_name
  - process_path
  - process_executable
  - process_id
  - process_guid
  - process_hash
  - process_integrity_level
  - user
  - user_id
  - vendor_product
| COMPUTE
  - total_events = COUNT()
  - first_time = MIN(event_time)
  - last_time = MAX(event_time)
| DERIVE first_time_readable = convert_timestamp_to_readable(first_time), last_time_readable = convert_timestamp_to_readable(last_time)
| APPLY allowlist exclusions for known benign cases (e.g., specific executable paths, parent processes, service accounts, or hosts)
| OUTPUT all grouped fields plus total_events, first_time, last_time, first_time_readable, last_time_readable"
Windows Deleted Registry By A Non Critical Process File Path,
MacOS AMOS Stealer - Virtual Machine Check Activity,
Linux Auditd Private Keys and Certificate Enumeration,"SEARCH events from Linux Auditd Execve data source
| PARSE fields: timestamp, host, argc, execve"
Linux Ruby Privilege Escalation,"SEARCH endpoint/EDR process creation events from Linux systems
| PARSE fields: timestamp, action, host/device, vendor_product, user_name, user_id, process_id, process_guid, process_name, process_path, process_executable, process_command_line, process_hash, process_integrity_level, original_file_name, parent_process_id, parent_process_guid, parent_process_name, parent_process_path, parent_process_executable, parent_process_command_line
| FILTER event_type equals ""process creation"" (or equivalent)
| FILTER operating"
Windows Multiple Accounts Disabled,"SEARCH Windows Security Event Logs WHERE EventCode == 4725 AND status == ""success""
| DERIVE time_bucket_start = floor(timestamp to 10-minute interval)
| GROUP BY time_bucket_start, EventCode, signature, src_user, SubjectDomainName, TargetDomainName, Logon_ID
| AGGREGATE count_events = COUNT(), distinct_user_count = COUNT_DISTINCT(user), user_list = COLLECT_DISTINCT(user), dest_list = COLLECT_DISTINCT(dest)
| FILTER distinct_user_count > 5
| OUTPUT time_bucket_start, EventCode, signature, src_user, SubjectDomainName, TargetDomainName, Logon_ID, count_events, distinct_user_count, user_list, dest_list"
Mshta spawning Rundll32 OR Regsvr32 Process,"SEARCH process creation telemetry from endpoint and OS logs (e.g., Sysmon ProcessCreate, Windows Security 4688, EDR process events) within the desired time window
| PARSE fields: timestamp, host, user, user_id, action, process_name, original_file_name, process_path, process_exec/command_line, process_id, process_guid, process_hash, process_integrity_level, parent_process_name, parent_process_path, parent_process_exec/command_line, parent_process_id, parent_process_guid, vendor_product
| FILTER events where action indicates a process start/creation
| FILTER events where parent_process_name equals ""mshta.exe"" (case-insensitive) OR parent_process_path ends with ""\mshta.exe"" (case-insensitive)
| FILTER events where (process_name equals ""rundll32.exe"" OR original_file_name equals ""rundll32.exe"" OR process_name equals ""regsvr32.exe"" OR original_file_name equals ""regsvr32.exe"")"
Windows Service Create with Tscon,
Detect Copy of ShadowCopy with Script Block Logging,
Reg exe Manipulating Windows Services Registry Keys,
Windows WinDBG Spawning AutoIt3,
Windows InstallUtil in Non Standard Path,
Detect Baron Samedit CVE-2021-3156 via OSQuery,"SEARCH process execution events collected by OSQuery
| PARSE each event to identify fields: timestamp, host, user, process_name, process_id, parent_process_name, parent_process_id, command_line
| FILTER events where command_line equals the exact string ""sudoedit -s *"" (treat the asterisk as a literal character)
| OUTPUT timestamp, host, user, process_name, process_id, parent_process_name, parent_process_id, command_line"
Revil Registry Entry,"SEARCH registry modification telemetry from endpoint sources (e.g., EDR registry events and Windows Sysmon RegistryEvent with Event IDs 12 and 13) |
FILTER events where registry_path contains ""SOFTWARE\WOW643"
Windows Defacement Modify Transcodedwallpaper File,"SEARCH process activity data
| FILTER records where process_path does not match ""*\Windows\Explorer.EXE""
| GROUP BY time_bucket(1 hour), action, dest, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product AGGREGATES process_event_count = COUNT()
| RENAME process_guid AS proc_guid
| JOIN ON proc_guid, time_bucket(
    SEARCH filesystem activity data
    | FILTER records where file_path matches ""*\AppData\Roaming\Microsoft\Windows\Themes\TranscodedWallpaper""
    | GROUP BY time_bucket(1 hour), dest, file_create_time, file_name, file_path, process_guid AGGREGATES file"
UAC Bypass With Colorui COM Object,"SEARCH module/DLL load events (e.g., Sysmon EventID 7) |
FILTER where loaded_module_path ends with ""\colorui.dll"" |
FILTER where process_name is not ""colorcpl.exe"" |
FILTER where process_image_path does not contain ""\windows\"" and does not contain ""\program files"" |
APPLY replace null or missing values in fields [Image, ImageLoaded, dest, loaded_file, loaded_file_path, original_file_name, process_exec, process_guid, process_hash, process_id, process_name, process_path, service_dll_signature_exists, service_dll_signature_verified, signature, signature_id, user_id, vendor_product] with a consistent placeholder (e.g., ""unknown"") |
GROUP records by [Image, ImageLoaded, dest, loaded_file, loaded_file_path, original_file_name, process_exec, process_guid, process_hash, process_id, process_name, process_path, service_dll_signature_exists, service_dll_signature_verified, signature, signature_id, user_id, vendor_product] |
COMPUTE event_count, firstTime = minimum(event_time), lastTime = maximum(event_time) per group |
DERIVE firstTime_readable and lastTime_readable as human-readable representations of firstTime and lastTime |
APPLY environment-specific allowlist/exception filters to remove known benign sources (if defined) |
OUTPUT [Image, ImageLoaded, dest, loaded_file, loaded_file_path, original_file_name, process_exec, process_guid, process_hash, process_id, process_name, process_path, service_dll_signature_exists, service_dll_signature_verified, signature, signature_id, user_id, vendor_product, event_count, firstTime, lastTime, firstTime_readable, lastTime_readable]"
Powershell Execute COM Object,"SEARCH events from PowerShell Script Block Logging data | FILTER events where EventCode equals 4104 | FILTER events where ScriptBlockText contains the substring ""CreateInstance([type]::GetTypeFromCLSID"" (case-insensitive) | FILL missing values in fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with ""unknown"" | GROUP records BY dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText | COMPUTE count = number of records in group, firstTime = earliest event timestamp in group, lastTime = latest event timestamp in group | DERIVE firstTime_readable and lastTime_readable by converting firstTime and lastTime to human-readable format | OUTPUT dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Credential Dumping via Symlink to Shadow Copy,"SEARCH endpoint process creation/execution events (e.g., Sysmon EID 1, Windows Security 4688, EDR process telemetry) |
PARSE fields: timestamp, host, user, user_id, action, vendor_product, process_name, process_path, process_id, process_guid, process_hash, integrity_level, command_line, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_command_line |
FILTER where command_line contains ""mklink"" (case-insensitive) |
FILTER where command_line contains ""HarddiskVolumeShadowCopy"" (case-insensitive) |
GROUP BY host, user, user_id"
Linux AWK Privilege Escalation,"SEARCH process creation telemetry from Linux endpoints (e.g., EDR or Sysmon for Linux process start events) |
FILTER events where process_command_line contains ""sudo"" AND contains ""awk"" AND matches the pattern ""BEGIN*system"" (the substring ""BEGIN"" appears before ""system"" with any characters between) |
GROUP events by action, host, original_file_name, parent_process_command_line, parent_process_executable, parent_process_guid, parent_process_id, parent_process_name,"
Windows Change Default File Association For No File Ext,
Malicious PowerShell Process - Encoded Command,
Get DomainUser with PowerShell Script Block,SEARCH events
Windows Possible Credential Dumping,"SEARCH Windows process access audit logs (e.g., Sysmon ProcessAccess events) where EventCode equals 10
| FILTER TargetImage contains ""\lsass.exe""
| FILTER GrantedAccess value is one of [""0x01000"",""0x1010"",""0x1038"",""0x40"",""0x1400"",""0x1fffff"",""0x1410"",""0x143a"",""0x1438"",""0x1000""]
| FILTER CallTrace contains any of [""dbgcore.dll"",""dbghelp.dll"",""ntdll.dll"",""kernelbase.dll"",""kernel32.dll""]
| FILTER SourceUser not in [""NT AUTHORITY\\SYSTEM"",""NT AUTHORITY\\NETWORK SERVICE""]
| GROUP BY CallTrace, EventID, GrantedAccess, Guid, Opcode, ProcessID, SecurityID, SourceImage, SourceProcessGUID, SourceProcessId, TargetImage, TargetProcessGUID, TargetProcessId, UserID, dest, granted_access, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product
| COMPUTE count = number of events per group, firstTime = earliest timestamp per group, lastTime = latest timestamp per group
| FORMAT firstTime and lastTime into human-readable timestamps
| OUTPUT count, firstTime, lastTime, and all group-by fields for each group"
Linux Auditd Change File Owner To Root,"SEARCH Linux Auditd process execution events that include a process command-line field and a timestamp
| FILTER events where the process_command_line contains the token ""chown"" followed later in the same command line by the token ""root"" (case-insensitive)
| GROUP events by host_identifier and process_command_line
| COMPUTE for each group: total_event_count, earliest event_time as firstTime, latest event_time as lastTime
| FORMAT firstTime and lastTime as human-readable timestamps
| APPLY environment-specific exclusions to suppress known benign chown-to-root activity (for example, approved maintenance scripts or designated administrative hosts)
| OUTPUT host_identifier, process_command_line, total_event_count, firstTime, lastTime"
DLLHost with no Command Line Arguments with Network,
GetAdGroup with PowerShell Script Block,"SEARCH PowerShell Script Block Logging events (data source: Windows PowerShell Script Block Logging) |
FILTER records where EventCode equals 4104 |
FILTER records where ScriptBlockText contains the substring ""Get-ADGroup"" (case-insensitive) |
FILL missing values for fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with empty string |
GROUP records by [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] |
COMPUTE count = number of records per group, firstTime = earliest event timestamp, lastTime = latest event timestamp |
DERIVE firstTime_readable and lastTime_readable by converting firstTime and lastTime to human-readable datetime format |
APPLY environment-specific suppression filters for known benign script blocks, accounts, hosts, paths, or ScriptBlockIds |
OUTPUT fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, count, firstTime, lastTime, firstTime_readable, lastTime_readable]"
Unloading AMSI via Reflection,"SEARCH PowerShell Script Block Logging events (EventCode equals 4104) | FILTER events where ScriptBlockText contains the substring ""system.management.automation.amsi"" (case-insensitive) | PARSE fields from each event: timestamp, dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText | FILL missing values in the parsed fields with a placeholder (for consistent grouping) | GROUP events by dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText; within each group COMPUTE count of events as event_count, earliest timestamp as firstTime, latest timestamp as lastTime | DERIVE human-readable time strings from firstTime and lastTime | APPLY optional environment-specific allowlist/suppression rules to reduce known benign matches | OUTPUT for each group: dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode,"
File with Samsam Extension,
Windows WMI Process And Service List,
Windows AD Replication Request Initiated from Unsanctioned Location,
Remote Process Instantiation via WMI and PowerShell,"SEARCH endpoint process creation events from Sysmon Event ID 1, Windows Security 4688, and EDR process telemetry | FILTER records where process.executable_name equals ""powershell.exe"" (case-insensitive) | FILTER records where process.command_line contains (case-insensitive) all of the following substrings: ""Invoke-WmiMethod"", ""-CN"", ""-Class Win32_Process"", ""-Name create"" | GROUP records by action, destination_host, original_file_name, parent.process_command_line, parent.executable_path, parent.process_guid, parent.process_id, parent.process_name, parent.process_image_path, process.command_line, process.executable_path, process.process_guid, process.process_hash, process.process_id, process.integrity_level, process.process_name, process.process_image_path, user.username, user.user_id, vendor_product | COMPUTE event_count for each group, first_seen_time = minimum event timestamp in group, last_seen_time = maximum event timestamp in group | DERIVE human_readable_first_seen from first_seen_time and human_readable_last_seen from last_seen_time | OUTPUT event_count, first_seen_time, last_seen_time, human_readable_first_seen, human_readable_last_seen, and all group-by fields"
Windows Office Product Spawned Uncommon Process,
Windows Modify Registry wuStatusServer,
Script Execution via WMI,"SEARCH process creation events from Sysmon Event ID 1, Windows Security Event ID 4688, and CrowdStrike process telemetry over the analysis period, selecting fields: timestamp, action, dest, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path"
Linux Doas Tool Execution,"SEARCH process execution events from endpoint/EDR telemetry on Linux hosts within the desired time range | FILTER records where process_name equals ""doas"" | GROUP records by action, dest, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product | COMPUTE event_count = COUNT(records), firstTime = MIN(event_time), lastTime = MAX(event_time) per group | DERIVE first_seen = format_time(firstTime), last_seen = format_time(lastTime) | APPLY optional allowlist/suppression to exclude known-benign doas usage (for example, specific users, hosts, or parent processes) | OUTPUT all grouping fields plus event_count, first_seen, and last_seen"
Windows ConsoleHost History File Deletion,"SEARCH endpoint file deletion telemetry (e.g., host-based logs that record file delete operations) |
FILTER events where (event_code equals 23 OR event_code equals 26) if an event_code field exists for the data source |
FILTER events where the target file path matches ""*\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt"" (case-insensitive; match on the full path or file_path/target_path equivalent) |
GROUP events BY action, dest, dvc, file_path, file_hash, file_name, file_modify_time, process_name, process_exec, process_id, process_path, user_id, vendor_product, process_guid, signature, signature_id, user |
COMPUTE count = number of events per group; firstTime = minimum event_time per group; lastTime = maximum event_time per group |
DERIVE firstTimeReadable = human-readable representation of firstTime; lastTimeReadable = human-readable representation of lastTime |
APPLY optional suppression to exclude known benign or approved deletions (e.g., sanctioned cleanup scripts, test systems, or approved admin accounts) |
OUTPUT the grouped fields plus count, firstTime, lastTime, firstTimeReadable, lastTimeReadable"
Detection of tools built by NirSoft,
Windows WMIC Shadowcopy Delete,"SEARCH Windows process creation events from Sysmon (Event ID 1) over the desired time range
| PARSE fields: event_time, host, action, vendor_product, user, user_id, process_name, process_path, process_executable, process_command_line, process_id, process_guid, process_hash, process_integrity_level, original_file_name, parent_process_name, parent_process_path, parent_process_executable, parent_process_id, parent_process_guid
| FILTER process_name equals ""wmic.exe""
| FILTER process_command_line contains ""shadowcopy""
| FILTER process_command_line contains ""delete""
| GROUP BY action, host, vendor_product, user, user_id, process_name, process_path, process_executable, process_command_line, process_id, process_guid, process_hash, process_integrity_level, original_file_name, parent_process_name, parent_process_path, parent_process_executable, parent_process_id, parent_process_guid
| COMPUTE event_count = count(), firstTime = min(event_time), lastTime = max(event_time)
| DERIVE firstTime_readable = convert_time(firstTime), lastTime_readable"
Linux c89 Privilege Escalation,"SEARCH endpoint process-creation telemetry from EDR agents
| PARSE each event to extract: event_time, action, host, vendor_product, user, user_id, process_id, process_guid, process_name, process_path, process_exec, process_hash, process_command_line, process_integrity_level, original_file_name, parent_process_id, parent_process_guid, parent_process_name, parent_process_path, parent_process_exec, parent_process (full command line if available)
| FILTER events where event_type equals ""process_creation""
| FILTER events where process_command_line contains ""c89"" (case-insensitive)
| FILTER events where process_command_line contains ""-wrapper"" (case-insensitive)
| FILTER events where process_command_line contains ""sudo"" (case-insensitive)
| GROUP events by: action, host, vendor_product, user, user_id, process_id, process_guid, process_name, process_path,"
Windows Privilege Escalation System Process Without System Parent,
Detect RTLO In Process,
Windows Excessive Service Stop Attempt,"SEARCH process execution events from endpoint and Windows process creation telemetry
| PARSE fields: timestamp, host, user, process_name, original_file_name, command_line, process_path, process_id, process_guid, process_hash, process_integrity_level, action, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, vendor_product
| FILTER records where lower(process_name) is in {""net.exe"",""sc.exe""} OR lower(original_file_name) is in {""net.exe"",""sc.exe""}
| FILTER records where command_line contains any of {""stop"",""delete""} (case-insensitive)
| GROUP records into 1-minute tumbling windows by [host, user, process_name, original_file_name, parent_process_name]
| COMPUTE per group: event_count = count(records), firstTime = min(timestamp), lastTime = max(timestamp), actions = set(action), parent_processes = set(parent_process_name), parent_paths = set(parent_process_path), parent_ids = set(parent_process_id), parent_guids = set(parent_process_guid),"
Windows Process Execution From ProgramData,
Enable WDigest UseLogonCredential Registry,"SEARCH registry value set/change events from endpoint telemetry (e.g., Windows registry modification logs) |
PARSE fields: event_time, host, action, process_id, process_guid, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_data, registry_value_type, status, user, product |
FILTER registry_path contains ""\System\CurrentControlSet\Control\SecurityProviders\WDigest\"" (case-insensitive) |
FILTER registry_value_name equals ""UseLogonCredential"" |
FILTER registry_value_data equals 1 (accept either integer 1 or hex 0x00000001) |
GROUP BY action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, product |
COMPUTE count = number of events per group, firstTime = earliest event_time per group, lastTime = latest event_time per group |
FILTER registry_value_data is not null |
DERIVE firstTime_readable and lastTime_readable from firstTime and lastTime (human-readable timestamps) |
APPLY environment-specific allowlists or suppression rules for known legitimate changes (if available) |
OUTPUT count, firstTime, lastTime, firstTime_readable, lastTime_readable, action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value"
PowerShell Enable PowerShell Remoting,"SEARCH events from PowerShell Script Block Logging (EventCode 4104) data source | FILTER records where EventCode equals 4104 | FILTER records where ScriptBlockText contains the substring ""Enable-PSRemoting"" | FILL missing values in dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText with ""N/A"" | GROUP records by dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText and aggregate eventCount = count of records, firstTime = minimum event timestamp, lastTime = maximum event timestamp | DERIVE firstTimeReadable by converting firstTime to a human-readable timestamp | DERIVE lastTimeReadable by converting lastTime to a human-readable timestamp | OUTPUT dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, eventCount, firstTime, lastTime, firstTimeReadable, lastTimeReadable"
Impacket Lateral Movement Commandline Parameters,
Remote Process Instantiation via WinRM and PowerShell Script Block,"SEARCH PowerShell Script Block Logging events | FILTER EventCode equals 4104 | FILTER ScriptBlockText contains ""Invoke-Command"" | FILTER ScriptBlockText contains ""-ComputerName"" | IMPUTE missing values in [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with ""unknown"" | GROUP records BY [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] | COMPUTE per group: count = number of records, firstTime = minimum event time, lastTime = maximum event time | DERIVE firstTimeReadable and lastTimeReadable by converting firstTime and lastTime to human-readable timestamps | APPLY environment-specific allowlists or suppression rules to exclude known benign administrative usage (optional) | OUTPUT [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, count, firstTime, lastTime, firstTimeReadable, lastTimeReadable]"
Windows Command and Scripting Interpreter Hunting Path Traversal,
Process Execution via WMI,
Detect Remote Access Software Usage File,
Linux NOPASSWD Entry In Sudoers File,"SEARCH process execution telemetry from endpoint/EDR data sources
| FILTER events where command_line contains the substring ""NOPASSWD:""
| GROUP BY host, action, original_file_name, parent_process_name, parent_process_path, parent_process_exec, parent_process_id, parent_process_guid, process_command_line, process_name, process_path, process_exec, process_id, process_guid, process_hash, process_integrity_level, user, user_id, vendor_product
| COMPUTE event_count = count of events per group, first_seen = earliest event_time per group, last_seen = latest event_time per group
| FORMAT first_seen and last_seen as human-readable timestamps
| APPLY allowlist/suppression rules to remove known benign patterns for this detection (if defined)
| OUTPUT all grouped fields plus event_count, first_seen, last_seen"
Windows Impair Defenses Disable Win Defender Auto Logging,"SEARCH Windows registry value set/modify events from endpoint telemetry (for example, Sysmon Event ID 13) over the desired time range
| FILTER events where the operation type indicates a registry value was set or modified
| FILTER events where either:
  - registry key path contains ""\Control\WMI\Autologger\DefenderApiLogger"" AND registry value name equals ""Start""
  - OR registry key path contains ""\Control\WMI\Autologger\DefenderAuditLogger"" AND registry value name equals """
Windows Network Connection Discovery Via Net,
Windows SQL Server Extended Procedure DLL Loading Hunt,"SEARCH data from Windows Application events where event_code equals 8128 | PARSE the XML field containing event data (e.g., EventData_Xml) to EXTRACT dll_name from the first Data element, dll_version from the second Data element, and procedure_name from the third Data element | DERIVE dll_category as: if dll_name equals ""xpstar.dll"" then ""Extended Procedures"", else if dll_name equals ""odsole70.dll"" then ""OLE Automation"", else if dll_name equals ""xplog70.dll"" then ""Logging Procedures"", else ""Other"" | GROUP records by host, dll_name, dll_version, dll_category | COMPUTE execution_count as the number of records in each group, procedures_used as the set of unique procedure_name values in each group, and last_seen as the most recent event timestamp in each group | SORT results by execution_count descending | OUTPUT host, dll_name, dll_version, dll_category, execution_count, procedures_used, last_seen"
Windows Drivers Loaded by Signature,"SEARCH Windows Sysmon telemetry where the event indicates a driver load and the event code equals 6
| PARSE each record to extract fields: ImageLoaded, dest, dvc, process_hash, process_path, signature, signature_id, user_id, vendor_product, and the event timestamp
| GROUP records by ImageLoaded, dest, dvc, process_hash, process_path, signature, signature_id, user_id, vendor_product
| COMPUTE for each group: count = number of records; firstTime = earliest event timestamp; lastTime = latest event timestamp
| DERIVE human-readable representations of firstTime and lastTime
| APPLY allowlist/suppression to exclude known benign drivers or vendors using fields such as ImageLoaded, signature, signature_id, process_hash, and vendor_product
| OUTPUT ImageLoaded, dest, dvc, process_hash, process_path, signature, signature_id, user_id, vendor_product, count, firstTime, lastTime, and their human-readable forms"
Windows AD Short Lived Domain Account ServicePrincipalName,"SEARCH Windows Security Event Log events where EventCode equals 5136 |
FILTER records where AttributeLDAPDisplayName equals ""servicePrincipalName"" |
PARSE fields needed for correlation and output: ObjectDN, AttributeValue, OperationType, Computer, timestamp |
GROUP events by ObjectDN and AttributeValue, ordered by timestamp ascending |
COMPUTE within each group the sequences that start with an event where OperationType equals ""%%14674"" (attribute value added) and end with the subsequent event where OperationType equals ""%%14675"" (attribute value deleted), and for each such sequence calculate duration = end_timestamp - start_timestamp (in seconds) |
DERIVE field short_lived = true if duration < 300, else false |
FILTER records where short_lived equals true |
FORMAT fields for output: set user = ObjectDN, dest = Computer; include user, dest, AttributeValue, duration, start_timestamp, end_timestamp |
APPLY optional organization-specific suppression or allowlist filters as needed |
OUTPUT the resulting records"
Linux File Created In Kernel Driver Directory,
Windows Impair Defense Disable Win Defender Report Infection,"SEARCH registry modification events from endpoint telemetry (e.g., events that record registry value set operations) |
FILTER events where registry_path contains ""\Microsoft\MRT\DontReportInfectionInformation"" |
FILTER events where registry_value_data equals ""0x00000001"" |
GROUP events by action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product |
COMPUTE count_of_events for each group, first_seen_time as the earliest event timestamp in the group, last_seen_time as the latest event timestamp in the group |
DERIVE first_seen_time_readable and last_seen_time_readable by converting first_seen_time and last_seen_time to human-readable timestamps |
SELECT first_seen_time_readable, last_seen_time_readable, count_of_events, action, host, process_guid, process_id, user, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, vendor_product |
OUTPUT results"
Msmpeng Application DLL Side Loading,
Powershell Load Module in Meterpreter,"SEARCH PowerShell Script Block Logging telemetry
| FILTER records where EventCode equals 4104
| FILTER records where ScriptBlockText contains (case-insensitive) any of:
  - ""MSF.Powershell""
  - ""MSF.Powershell.Meterpreter""
  - ""MSF.Powershell.Meterpreter.Kiwi""
  - ""MSF.Powershell.Meterpreter.Transport""
| DERIVE default placeholder values for missing fields: dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText
| GROUP BY dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText
| COMPUTE count of records as count, minimum event timestamp as firstTime, maximum event timestamp as lastTime
| FORMAT firstTime and lastTime into human-readable timestamps
| APPLY environment-specific allowlist/suppression to remove known benign activity
| OUTPUT dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, count, firstTime, lastTime"
Windows AD Domain Root ACL Modification,
Linux Indicator Removal Clear Cache,"SEARCH endpoint process creation events from EDR/host telemetry | PARSE fields: event_time, host, action, process_name, process_executable, process_path, process_command_line, process_id, process_guid, process_hash, process_integrity_level, original_file_name, parent_process_name, parent_process_id, parent_process_guid, parent_process_executable, parent_process_path, parent_process_command_line, user, user_id | FILTER process_name IN [""dash"",""bash"",""sudo""] | FILTER process_command_line CONTAINS ""/proc/sys/vm/drop_caches"" | FILTER process_command_line"
Disabling SystemRestore In Registry,"SEARCH endpoint registry modification events (e.g., from registry set operations) within the desired time range
| FILTER records where registry_path contains any of:
  ""\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SystemRestore\DisableSR"",
  ""\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SystemRestore\DisableConfig"",
  ""\SOFTWARE\Policies\Microsoft\Windows NT\SystemRestore\DisableSR"",
  ""\SOFTWARE\Policies\Microsoft\Windows NT\SystemRestore\DisableConfig""
| FILTER records where registry_value_data equals ""0x00000001""
| FILTER records where registry_value_data is not null
| GROUP BY action, dest, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product
| AGGREGATE count as event_count, minimum event_time as firstTime, maximum event_time as lastTime
| DERIVE human_readable_firstTime from firstTime, human_readable_lastTime from lastTime
| APPLY allowlist or suppression rules to exclude known benign or expected modifications (if defined)
| OUTPUT action, dest, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product, event_count, firstTime, lastTime, human_readable_firstTime, human_readable_lastTime"
Scheduled Task Initiation on Remote Endpoint,"SEARCH process execution events from endpoint and EDR telemetry with fields including: event_time, dest, user, user_id, process_name, original_file_name, process_command_line, process_path, process_exec, process_id, process_guid, process_hash, process_integrity_level, parent_process_name, parent_process_path, parent_process, parent_process_exec, parent_process_id, parent_process_guid, action, vendor_product
| FILTER events where process_name equals ""schtasks.exe"" OR original_file_name equals ""schtasks.exe"" (case-insensitive)
| FILTER events where process_command_line contains the substring "" /S "" (case-insensitive) AND contains the substring ""/run"" (case-insensitive)
| PARSE the listed fields from each matching event (retain their native names from the source)
| GROUP events by: action, dest, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_command_line, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product
| COMPUTE for each group: event_count = number of events, first_seen_time = minimum(event_time), last_seen_time = maximum(event_time)
| DERIVE human_readable_first_seen from first_seen_time and human_readable_last_seen from last_seen_time
| APPLY environment-specific allowlist or suppression rules to exclude known legitimate administrative uses (optional)
| OUTPUT all grouping fields plus event_count, first_seen_time, last_seen_time, human"
PetitPotam Network Share Access Request,"SEARCH Windows Security Event Logs for records with EventID = 5145 |
FILTER records where SubjectUserName equals ""ANONYMOUS LOGON"" |
FILTER records where RelativeTargetName equals ""lsarpc"" |
GROUP records by dest, SubjectUserSid, ShareName, src, AccessMask, AccessReason |
COMPUTE for each group: total_events = count of records, firstTime = earliest timestamp, lastTime = latest timestamp |
FORMAT firstTime and lastTime as human-readable timestamps |
APPLY environment-specific allowlists or suppression rules to exclude known benign patterns (e.g., approved hosts, service accounts, or expected AccessMask/AccessReason combinations) |
OUTPUT dest, SubjectUserSid, ShareName, src, AccessMask, AccessReason, total_events, firstTime, lastTime"
Detect Regsvcs with Network Connection,"SEARCH events from Sysmon network connection logs (Event ID 3) where a process initiates an outbound connection | FILTER process_name equals ""regsvcs.exe"" | FILTER destination_ip not in 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16 | GROUP BY action, app, dest, dest_ip, dest_port, direction, dvc, protocol, protocol_version, src, src_ip, src_port, transport, user, vendor_product, process_name, process_exec, process_guid, process_id | COMPUTE count of events per group, earliest timestamp as firstTime, latest timestamp as lastTime | FORMAT firstTime and lastTime into human-readable timestamps | APPLY environment-specific allowlists or suppression rules (e.g., known benign destinations or process paths), if defined | OUTPUT all grouping fields plus count, firstTime, lastTime"
Windows Unusual Count Of Disabled Users Failed Auth Using Kerberos,
Windows PowerView SPN Discovery,"SEARCH PowerShell Script Block Logging events where EventCode equals 4104
| FILTER events where ScriptBlockText contains ""Get-NetUser"" OR ""Get-DomainUser""
| FILTER events where ScriptBlockText contains ""-SPN""
| FILL missing values in fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with a placeholder to avoid nulls during grouping
| GROUP events by [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText]
| COMPUTE per-group metrics: event_count = number of events, firstTime = earliest event timestamp, lastTime = latest event timestamp
| DERIVE firstTime_readable and lastTime_readable as human-readable representations of firstTime and lastTime
| APPLY optional environment-specific filtering to suppress known benign scripts or administrative activity
| OUTPUT event_count, firstTime, lastTime, firstTime_readable, lastTime_readable, and all grouping fields"
Active Directory Privilege Escalation Identified,"SEARCH risk events produced by detections related to Active Directory privilege escalation within the selected time window
| FILTER records"
Windows File Without Extension In Critical Folder,
Linux Possible Access Or Modification Of sshd Config File,"SEARCH process execution telemetry from Linux endpoints with fields: timestamp, host, user, user_id, vendor_product, action, process_name, process_id, process_guid, process_path, process_executable, process_command_line, process_hash, process_integrity_level, original_file_name, parent_process_name, parent_process_id, parent_process_guid, parent_process_path, parent_process_executable, parent_process_command_line
| FILTER where process_name equals ""cat"" OR process_name starts with ""nano"" OR process_name starts with ""vim"" OR process_name starts with ""vi""
| FILTER where process_command_line contains"
Windows Office Product Spawned Control,
Windows MSTSC RDP Commandline,
Windows Archive Collected Data via Powershell,
Monitor Registry Keys for Print Monitors,"SEARCH endpoint registry modification events
| FILTER action equals ""modified""
| FILTER registry_path contains ""\CurrentControlSet\Control\Print\Monitors""
| GROUP BY action, dest, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_data, registry_value_name, registry_value_type, status, user, vendor_product AGGREGATE count as event_count, min(event_time) as first_time, max(event_time) as last_time
| DERIVE first_time_readable from first_time (convert to human-readable), last_time_readable from last_time (convert to human-readable)
| APPLY environment-specific suppression filters for known benign registry changes (if defined)
| OUTPUT action, dest, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_data, registry_value_name, registry_value_type, status, user, vendor_product, event_count, first_time, last_time, first_time_readable, last_time_readable"
Crowdstrike Admin Weak Password Policy,"SEARCH events from CrowdStrike identity-related alerts/findings data

| FILTER records where primaryDisplayName contains the substring ""admin""

| PARSE nested attributes to flatten and map:
  - riskFactors[].severity -> severity
  - riskFactors[].type -> risk_type
  - roles[].type -> role_type
  - accounts[].domain"
Windows Disable or Stop Browser Process,
Windows Parent PID Spoofing with Explorer,
Windows PowerView Constrained Delegation Discovery,"SEARCH events from PowerShell Script Block Logging (Windows Event ID 4104) | FILTER records where ScriptBlockText contains ""Get-DomainComputer"" OR ""Get-NetComputer"" | FILTER records where ScriptBlockText contains ""-TrustedToAuth"" | FILL missing values in fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with ""N/A"" | GROUP records BY dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText | COMPUTE eventCount = count(), firstTime = earliest(event_time), lastTime = latest(event_time) | FORMAT firstTime and lastTime as human-readable timestamps | OUTPUT fields [eventCount, firstTime, lastTime, dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText]"
Windows Local Administrator Credential Stuffing,
Windows Cisco Secure Endpoint Stop Immunet Service Via Sfc,
Windows Command and Scripting Interpreter Path Traversal Exec,"SEARCH process-creation telemetry and EDR process events (e.g., Sysmon 1, Windows Security 4688, EDR process start) with fields: event_time, operating_system, host, vendor_product, process.{command_line, path, name, executable, id, guid, hash, integrity_level}, parent_process.{name, path, executable, id, guid}, original_file_name, user, user_id, action
| FILTER operating_system is not ""Linux""
| FILTER process.command_line OR process.path contains a path-traversal pattern indicating three or more parent-directory segments, matching any of:
  - ""/../../.."" (forward-slash traversal)
  - ""\..\..\..\"" (backslash traversal)
  - ""//..//..//..//"" (double-slash variant)
| GROUP BY action, host, original_file_name, parent_process.name, parent_process.path, parent_process.executable, parent_process.id, parent_process.guid, process.command_line, process.executable, process.guid, process.hash, process.id, process.integrity_level, process.name, process.path, user, user_id, vendor_product
| COMPUTE count = number of events per group, first_time = minimum event_time, last_time = maximum event_time
| FORMAT first_time, last_time as human-readable timestamps
| APPLY allowlist to remove known benign processes, paths, command-line patterns, or hosts as defined by the environment
| OUTPUT count, first_time, last_time, and all grouping fields per result"
Windows Registry Certificate Added,"SEARCH endpoint registry set-value events from endpoint telemetry (e.g., Sysmon Event ID 13)
| PARSE fields: event_time, action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, product
| FILTER records where registry_path contains the path segment ""\certificates\""
| FILTER records where registry_value_name equals ""Blob""
| GROUP records by action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_data, registry_value_name, registry_value_type, status, user, product
| COMPUTE event_count = count of records per group, first_seen = earliest event_time per group, last_seen = latest event_time per group
| APPLY optional exclusions to remove known-benign certificate management activity (e.g., approved tools, trusted paths, known users/processes)
| OUTPUT grouped fields plus first_seen, last_seen, event_count"
Windows Audit Policy Auditing Option Modified - Registry,"SEARCH endpoint registry modification events (e.g., Sysmon Event ID 13) |
FILTER events where registry_path contains ""\Control\Lsa"" (case-insensitive) |
FILTER events where registry_value_name is one of {""CrashOnAuditFail"", ""FullPrivilegeAuditing"", ""AuditBaseObjects"", ""AuditBaseDirectories""} |
GROUP BY action, dest (host), process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_data, registry_value_name, registry_value_type, status, user, vendor_product |
COMPUTE event_count = count of events per group, first_seen_time = minimum event_time in group, last_seen_time = maximum event_time in group |
DERIVE first_seen_time_readable = format_timestamp(first_seen_time), last_seen_time_readable = format_timestamp(last_seen_time) |
APPLY environment-specific allowlists or suppression rules to exclude known benign changes (e.g., approved maintenance tools or change windows) |
OUTPUT all grouped fields plus event_count, first_seen_time_readable, and last_seen_time_readable"
Get-ForestTrust with PowerShell,
Shim Database Installation With Suspicious Parameters,
Detect Password Spray Attack Behavior On User,
Windows Cisco Secure Endpoint Related Service Stopped,
Windows Hidden Schedule Task Settings,"SEARCH events from Windows Security Event Logs
| FILTER EventCode equals 4698
| FILTER TaskContent contains the substring ""<Hidden>true</Hidden>""
| GROUP by TaskName, TaskContent, action, signature, status, dest
| COMPUTE count = number of events per group, firstTime = earliest event_time in group, lastTime = latest event_time in group
| DERIVE firstTime_readable = convert firstTime to human-readable timestamp, lastTime_readable = convert lastTime to human-readable timestamp
| APPLY environment-specific allowlists/exclusions (e.g., by TaskName, signature, status, dest) to remove known benign entries
| OUTPUT TaskName, TaskContent, action, signature, status, dest, count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Suspicious Regsvr32 Register Suspicious Path,
Detect Regsvr32 Application Control Bypass,"SEARCH process creation events from endpoint and EDR data sources (e.g., Sysmon Event ID 1, Windows Security 4688, EDR process telemetry)
| PARSE each event to extract: event_time, action, host, vendor_product, user_name, user_id, process.command_line, process.name, process.path, process.executable, process.id, process.guid, process.hash, process.integrity_level, process.original_file_name, parent.command_line, parent.name, parent.path, parent.executable, parent.id, parent.guid, parent.original_file_name
| FILTER events where action indicates a process start/creation (if the field exists)
| FILTER events where the process is Regsvr32 by any of:
  - process.name equals ""regsvr32.exe"" (case-insensitive)
  - OR process.original_file_name equals ""REGSVR32.EXE"" (case-insensitive)
  - OR process.path or process.executable ends with ""\regsvr32.exe"" (case-insensitive)
| FILTER events where process.command_line contains the substring ""scrobj"" (case-insensitive) to capture scrobj.dll usage
| GROUP records by: action, host, vendor_product, user_name, user_id, process.original_file_name, parent.name, parent.path, parent.executable, parent.id, parent.guid, process.command_line, process.name, process.path, process.executable, process.id, process.guid, process.hash, process.integrity_level
| COMPUTE event_count = number of events per group, first_seen_time = minimum event_time per group, last_seen_time = maximum event_time per group
| FORMAT first_seen_time"
Recon AVProduct Through Pwh or WMI,"SEARCH records from PowerShell Script Block Logging where the event code equals 4104
| FILTER records where ScriptBlockText contains (case-insensitive) any of [""SELECT"", ""WMIC""]
| FILTER records where ScriptBlockText also contains (case-insensitive) any of [""AntiVirusProduct"", ""AntiSpywareProduct""]
| PARSE fields needed for analysis: timestamp, dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText
| FILL missing values for the parsed fields with a consistent placeholder (for example, null) to preserve grouping integrity
| GROUP records by dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText and COMPUTE:
  - count = number of records in each group
  - firstTime = minimum timestamp in the group
  - lastTime = maximum timestamp in the group
| COMPUTE human-readable representations of firstTime and lastTime (in addition to raw timestamps)
| APPLY optional allowlist or tuning filters to remove known benign or approved administrative activity (for example, trusted scripts, known management paths, or service accounts)
| OUTPUT dest, user_id, vendor_product, ProcessID, Path, Name, ScriptBlockId, signature, signature_id, Guid, Opcode, EventID, ScriptBlockText, count, firstTime, lastTime"
Windows Group Policy Object Created,
Nishang PowershellTCPOneLine,"SEARCH process start/execution events from endpoint and OS telemetry (e.g., Sysmon Event ID 1, Windows Security 4688, EDR process telemetry) within the desired time range
| PARSE fields including: event_time, action, dest/host, vendor_product, user, user_id, process_name, original_file_name, process_path, executable_path, process_id, process_guid, process_hash, process_integrity_level, command_line, parent_process, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_executable_path
| FILTER events to those where the process is a PowerShell interpreter (e.g., process_name or original_file_name equals ""powershell.exe"" or ""pwsh.exe"", case-insensitive)
| FILTER remaining events where command_line contains both ""Net.Sockets.TCPClient"" AND ""System.Text.ASCIIEncoding"" (case-insensitive substring match)
| GROUP events by action, dest/host, original_file_name, parent_process, parent_executable_path, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, command_line, executable_path, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product
| COMPUTE count_of_events per group
| DERIVE first_seen_time = minimum(event_time) and last_seen_time = maximum(event_time) per group
| FORMAT first_seen_time and last_seen_time into human-readable timestamps
| APPLY optional allowlist exclusions (e.g., known administrative scripts, approved parent processes, trusted paths) to reduce benign matches
| OUTPUT grouped records with context fields, count_of_events, first_seen_time, and last_seen_time"
Cisco NVM - Suspicious Network Connection From Process With No Args,"SEARCH Cisco Network Visibility Module flow telemetry
| PARSE records to extract: timestamp, src, dest, dest_port, transport, dest_hostname, process_name, process_path, process_id, process_integrity_level, parent_process_path, parent_process_integrity_level, parent_process_arguments, process_arguments, process_hash, parent_process_hash, module_name_list, module_hash_list, aliul
| FILTER records where process_name is one of: backgroundtaskhost.exe, svchost.exe, dllhost.exe, werfault.exe, searchprotocolhost.exe, wuauclt.exe, spoolsv.exe, rundll32.exe, regasm.exe, regsvr32.exe, regsvcs.exe
| FILTER records where process_arguments is missing or empty (no command-line arguments)
| FILTER records where dest IP is not within any of the following special/private/reserved ranges: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 192.0.0.0/24, 192.0.0.0/29, 192.0.0.8/32, 192.0.0"
Linux Possible Ssh Key File Creation,"SEARCH endpoint filesystem activity events with fields: event_time, action, host, file_path, file_name, file_create_time, file_modify_time, file_access_time, file_hash, file_acl, file_size, process_guid, process_id, user, vendor_product
| FILTER records where file_path matches pattern ""*/.ssh*""
| GROUP records by action, host, file_access_time, file_create_time, file_hash, file_modify_time, file_name, file_path, file_acl, file_size, process_guid, process_id, user, vendor_product
| COMPUTE count of records as eventCount, minimum event_time as firstTime, maximum event_time as lastTime for each group
| DERIVE firstTimeReadable and lastTimeReadable by converting firstTime and lastTime to human-readable timestamps
| APPLY environment-specific allowlists or suppression rules to exclude known benign SSH-related file activity (if available)
| OUTPUT action, host, file_name, file_path, file_create_time, file_modify_time, file_access_time, file_hash, file_acl, file_size, process_guid, process_id, user, vendor_product, eventCount, firstTime, lastTime, firstTimeReadable, lastTimeReadable"
PowerShell Script Block With URL Chain,
MS Scripting Process Loading Ldap Module,"SEARCH events from Sysmon ImageLoad telemetry (EventID 7) |
FILTER records where event_id equals 7 |
FILTER records where process_image path or name matches wscript.exe OR cscript.exe (case-insensitive) |
FILTER records where loaded_module path or name matches Wldap32.dll OR adsldp.dll OR adsldpc.dll (case-insensitive) |
HANDLE NULLS by replacing missing values in fields used for grouping with empty strings: process_image, loaded_module, dest, loaded_file, loaded_file_path, original_file_name, process_exec, process_guid, process_hash, process_id, process_name, process_path, service_dll_signature_exists, service_dll_signature_verified, signature, signature_id, user_id, vendor_product |
GROUP records by process_image, loaded_module, dest, loaded_file, loaded_file_path, original_file_name, process_exec, process_guid, process_hash, process_id, process_name, process_path, service_dll_signature_exists, service_dll_signature_verified, signature, signature_id, user_id, vendor_product |
COMPUTE count of records per group, earliest event_timestamp as firstTime, latest event_timestamp as lastTime |
DERIVE firstTime_readable and lastTime_readable as human-readable representations of firstTime and lastTime |
APPLY optional environment-specific suppression or allowlist logic for known benign patterns (ms_scripting_process_loading_ldap_module_filter) |
OUTPUT the grouped fields with count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Disabling CMD Application,"SEARCH registry modification events from endpoint telemetry
| FILTER registry_path contains ""\SOFTWARE\Policies\Microsoft\Windows\System\DisableCMD"" (case-insensitive)
| FILTER registry_value_data equals ""0x00000001""
| FILTER registry_value_data is not null
| GROUP BY action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_data, registry_value_name, registry_value_type, status, user, vendor_product
| COMPUTE event_count = count(), first_seen_time = min(event_time), last_seen_time = max(event_time)
| FORMAT first_seen_time, last_seen_time as human-readable timestamps
| OUTPUT action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product, event_count, first_seen_time, last_seen_time"
Windows Export Certificate,"SEARCH Windows event logs from the Certificate Services Client Lifecycle channel with event_id = 1007 within the desired time range
| PARSE the XML payload contained in the user data field into discrete attributes, extracting at minimum SubjectName and retaining the full set of parsed user data attributes
| GROUP records by Computer (host), SubjectName, and the complete set of parsed user data attributes to uniquely represent each certificate export
| COMPUTE event_count per group, earliest_event_time = minimum event timestamp, latest_event_time = maximum event timestamp
| DERIVE earliest_event_time_readable and latest_event_time_readable by converting the computed timestamps to human-readable format
| APPLY optional suppression to exclude known benign hosts, users, or certificate subjects if an allowlist is provided
| OUTPUT Computer, SubjectName, parsed_user_data_attributes, event_count, earliest_event_time, latest_event_time, earliest_event_time_readable, latest_event_time_readable"
Windows Identify Protocol Handlers,
Windows BootLoader Inventory,"SEARCH Windows bootloader paths inventory events generated by a PowerShell scripted input across endpoints, selecting fields: host, event_timestamp, event_payload
| GROUP events BY host
| COMPUTE per host: event_count = total number of events, first_seen = minimum event_timestamp, last_seen = maximum event_timestamp, sample_event_payloads = distinct set of event_payloads
| FORMAT first_seen and last_seen as human-readable datetimes
| APPLY environment-specific filtering to exclude known-benign hosts or expected bootloader configurations and to remove incomplete records (e.g., missing host or timestamp)
| OUTPUT host, event_count, first_seen, last_seen, sample_event_payloads"
Windows Impair Defense Disable Defender Firewall And Network,"SEARCH endpoint registry modification events
| FILTER records where registry_path contains ""Windows Defender Security Center\Firewall and network protection\UILockdown""
| FILTER records where registry_value_data equals ""0x00000001""
| GROUP records BY action, dest, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_data, registry_value_name, registry_value_type, status, user, vendor_product
| COMPUTE count = number of records in group, firstTime = earliest event_time in group, lastTime = latest event_time in group
| FORMAT firstTime and lastTime as human-readable timestamps
| OUTPUT action, dest, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product, count, firstTime, lastTime"
Suspicious Scheduled Task from Public Directory,"SEARCH process creation events from Sysmon Event ID 1, Windows Security 4688, and EDR process telemetry, retrieving at least: timestamp, host/device, user, user_id, action, vendor_product, process_name, process_path, command_line, process_id, process_guid, process_hash, process_integrity_level, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_executable
| FILTER events where process_name equals ""schtasks.exe"" (case-insensitive)
| FILTER events where command_line contains any of the following directory substrings (case-insensitive): ""\users\public\"", ""\programdata\"", ""\windows\temp""
| FILTER events where command_line contains the token ""/create"" (case-insensitive)
| GROUP events by action, host/device, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_executable, process_name, process_path, command_line, process_id, process_guid, process_hash, process_integrity_level, user, user_id, vendor_product
| COMPUTE count_events, earliest_event_time (min timestamp), latest_event_time (max timestamp) for each group
| FORMAT earliest_event_time and latest_event_time as human-readable timestamps
| APPLY environment-specific allowlists to exclude known-benign scheduled task creation patterns, hosts, users, or command lines (if available)
| OUTPUT the grouped fields along with count_events, earliest_event_time, latest_event_time"
Unusually Long Command Line - MLTK,
Windows AD Replication Request Initiated by User Account,
Detect Credential Dumping through LSASS access,"SEARCH process access telemetry (e.g., Sysmon) within the desired time range
| FILTER events where the event identifier equals 10 (process access)
| FILTER events where TargetImage ends with ""lsass.exe"" (case-insensitive)
| FILTER events where GrantedAccess is one of [""0x1010"", ""0x1410""]
| GROUP events by CallTrace, EventID, GrantedAccess, Guid, Opcode, ProcessID, SecurityID, SourceImage, SourceProcessGUID, SourceProcessId, TargetImage, TargetProcessGUID, TargetProcessId, UserID, dest, granted_access, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product"
Linux Auditd Preload Hijack Via Preload File,"SEARCH Linux Auditd events that record file path activity
| FILTER events where type equals ""PATH""
| FILTER events where the file path field (name) starts with ""/etc/ld.so.preload"" (supports wildcard match such as ""/etc/ld.so.preload*"")
| DERIVE dest = host
| GROUP events BY name, nametype, ogid, type, dest
| COMPUTE count = total number of events per group, firstTime = earliest event timestamp per group, lastTime = latest event timestamp per group
| FORMAT firstTime and lastTime as human-readable timestamps
| APPLY allowlist filters to exclude known benign or authorized modifications to the preload file
| OUTPUT name, nametype, ogid, type, dest, count, firstTime, lastTime"
Detect SharpHound File Modifications,"SEARCH endpoint filesystem activity events (file create/modify/access) from endpoint telemetry
| FILTER records where file_name matches any of:
  - wildcard ""*bloodhound.zip"" (case-insensitive)
  - wildcard ""*_computers.json""
  - wildcard ""*_gpos.json""
  - wildcard ""*_domains.json""
  - wildcard ""*_users.json""
  - wildcard ""*_groups.json""
  - wildcard ""*_ous.json""
  - wildcard ""*_containers.json""
| GROUP BY action, dest, file_access_time, file_create_time, file_hash, file_modify_time, file_name, file_path, file_acl, file_size, process_guid, process_id, user, vendor_product
| COMPUTE event_count per group, firstTime = minimum event_time per group, lastTime = maximum event_time per group
| DERIVE firstTime_readable and lastTime_readable as human-readable representations of firstTime and lastTime
| APPLY environment-specific suppression or allowlist rules to remove known-benign paths, processes, or users (optional)
| OUTPUT grouped fields plus event_count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Detect Rundll32 Inline HTA Execution,
Services Escalate Exe,
Windows Service Deletion In Registry,
Linux Auditd Nopasswd Entry In Sudoers File,"SEARCH Linux Auditd events containing process title data | FILTER events where the proctitle field contains the string ""NOPASSWD"" | SELECT fields: proctitle, host, event timestamp | GROUP records by proctitle and host | COMPUTE event_count for each group and first_time = minimum(event timestamp) and last_time = maximum(event timestamp) | FORMAT first_time and last_time into human-readable timestamps | APPLY environment-specific allowlists or suppression rules to exclude known benign modifications | OUTPUT proctitle, host, event_count, first_time, last_time"
Powershell Fileless Script Contains Base64 Encoded Content,"SEARCH events from the PowerShell Script Block Logging data source | FILTER records where EventCode equals 4104 | FILTER records where ScriptBlockText contains ""FromBase64String"" OR ScriptBlockText contains ""gnirtS46esaBmorF"" | COALESCE missing values in fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] to empty placeholders | GROUP records by [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] | COMPUTE event_count = count of records per group, firstTime = earliest event_time per group, lastTime = latest event_time per group | DERIVE firstTime_readable and lastTime_readable as human-readable representations of firstTime and lastTime | APPLY optional environment-specific allowlist/false-positive filters (for example on ScriptBlockText, Path, user_id, or signature) | OUTPUT fields [dest, signature"
Windows Credentials from Password Stores Creation,"SEARCH process execution events from endpoint telemetry (e.g., Sysmon Event ID 1, Windows Security 4688, EDR process logs) within the desired time range |
FILTER events where process_name equals ""cmdkey.exe"" OR original_file_name equals ""cmdkey.exe"" (case-insensitive) |
FILTER events where command_line contains ""/generic"" (case-insensitive) |
FILTER events where command_line contains ""/user"" OR command_line contains ""/password"" (case-insensitive) |
SELECT fields: timestamp, action, host, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_executable, process_name, process_path, process_id, process_guid, process_executable, process_hash, process_integrity_level, command_line, user, user_id, vendor_product |
GROUP records by action, host, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_executable, process_name, process_path, process_id, process_guid, process_executable, process_hash, process_integrity"
Windows DotNet Binary in Non Standard Path,
Set Default PowerShell Execution Policy To Unrestricted or Bypass,"SEARCH endpoint telemetry for registry value modification events
| PARSE each event to extract at minimum: event_time, host, user, process_id, process_guid, action, status, vendor_product, registry_path, registry_value_name, registry_value_data, registry_value_type
| DERIVE registry_hive and registry_key_name from registry_path (e.g., split hive from the remainder; last path segment as key name as appropriate for your schema)
| FILTER registry_path contains ""\Software\Microsoft\Powershell\1\ShellIds\Microsoft.PowerShell"" (case-insensitive)
| FILTER registry_value_name equals ""ExecutionPolicy"" (case-insensitive)
| FILTER registry_value_data is one of [""Unrestricted"", ""Bypass""] (case-insensitive)
| FILTER action indicates a registry value was created/updated (e.g., SetValue, CreateValue, Write) if such a field is available
| GROUP BY host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_data, registry_value_type, action, status, user, vendor_product
| COMPUTE event_count = COUNT(), first_seen_time = MIN(event_time), last_seen_time = MAX(event_time)
| OUTPUT event_count, first_seen_time, last_seen_time, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_data, registry_value_type, action, status, user, vendor_product"
PowerShell Loading DotNET into Memory via Reflection,
Registry Keys for Creating SHIM Databases,"SEARCH endpoint registry modification events from hosts/endpoints

| FILTER records where registry_path contains ""\CurrentVersion\AppCompatFlags\Custom"" OR"
Short Lived Windows Accounts,
Remcos client registry install entry,"SEARCH endpoint registry activity logs from hosts, including events for registry key/value creation and modification (e.g., Sysmon Event IDs 12 and 13) within the desired time window
| FILTER records where registry_path contains ""\Software\Remcos""
| PARSE fields: timestamp, action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product
| GROUP records by action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product
| COMPUTE event_count = count(records), first_seen_time = minimum(timestamp), last_seen_time = maximum(timestamp)
| APPLY optional allowlist or environment-specific filters to exclude known benign activity if defined
| OUTPUT action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product, event_count, first_seen_time, last_seen_time"
Windows DLL Side-Loading In Calc,
Powershell Get LocalGroup Discovery with Script Block Logging,"SEARCH PowerShell Script Block Logging telemetry from Windows endpoints | FILTER records where EventCode equals 4104 | FILTER records where ScriptBlockText contains the substring ""get-localgroup"" (case-insensitive) | HANDLE MISSING by substituting a placeholder value for nulls in fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] | GROUP records by [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] | COMPUTE metrics: count of records as eventCount, earliest event time as firstTime, latest event time as lastTime | DER"
Detect Certify With PowerShell Script Block Logging,
Windows Administrative Shares Accessed On Multiple Hosts,
Windows Event Log Cleared,"SEARCH Windows Security and System event logs within the desired time range
| FILTER records where (channel equals ""Security"" AND event_id equals 1102) OR (channel equals ""System"" AND event_id equals 104)
| GROUP records by action, application, change_type, destination, device, event_name, object_attributes, object_category, signature, signature_id, source_user, status, subject, user, vendor_product, object, event_id
| COMPUTE for each group: total_count, firstTime as earliest event_time, lastTime as latest event_time
| FORMAT firstTime and lastTime as human-readable timestamps
| APPLY suppression rules to remove known benign log-clearing activity (for example, expected admin actions or maintenance windows)
| OUTPUT the grouped attributes along with total_count, firstTime, and lastTime"
Windows Forest Discovery with GetForestDomain,"SEARCH records from the PowerShell Script Block Logging data source where EventCode equals 4104
| FILTER records where ScriptBlockText contains the substring ""Get-ForestDomain""
| HANDLE missing values by replacing nulls in fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with a placeholder value
| GROUP records BY dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText
| COMPUTE total_count = count of records, firstTime = minimum event_time, lastTime = maximum event_time for each group
| DERIVE firstTimeReadable and lastTimeReadable as human-readable forms of firstTime and lastTime
| OUTPUT dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, total_count, firstTime, lastTime, firstTimeReadable, lastTimeReadable"
Download Files Using Telegram,"SEARCH Windows Sysmon telemetry for file stream creation events where event_id equals 15
| FILTER records where process_name equals ""telegram.exe"" and TargetFilename matches the pattern ""*:Zone.Identifier""
| GROUP records by dest, dvc, file_hash, file_name, file_path, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product, Contents, Image
| COMPUTE count of records per group"
Windows High File Deletion Frequency,
Suspicious Linux Discovery Commands,
Windows Multiple Disabled Users Failed To Authenticate Wth Kerberos,"SEARCH Windows Security Event Log data focused on Kerberos ticket request events (Event ID 4768) within the analysis time range | PARSE each event to extract timestamp, event_id, outcome, failure_code, source_endpoint (e.g., client IP or workstation), and user | FILTER events where event_id equals 4768 | FILTER events where outcome indicates failure and failure_code equals ""0x12"" (credentials revoked) | ENRICH each event with directory attributes for the user to obtain an is_disabled flag | FILTER events where is_disabled equals true | GROUP events by source_endpoint into 5-minute windows | COMPUTE unique_user_count as the count of distinct users per group and total_attempts as the"
Linux Ingress Tool Transfer with Curl,"SEARCH process-creation telemetry from Linux endpoints within the analysis time window
| PARSE fields: event_time, device, action, process_name, command_line, process_path, process_id, process_guid, process_hash, process_integrity_level, user, user_id, original_file_name, parent_command_line, parent_process_name, parent_process_id, parent_process_guid, parent_process_path, parent_binary, process_binary, product
| FILTER records where process_name equals ""curl"" (case-insensitive)
| FILTER records where command_line contains any of the following switches (case-insensitive): ""-O"", ""-sO"", ""-ksO"", ""--output""
| GROUP by action, device, original_file_name, parent_command_line, parent_binary, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, command_line, process_binary, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, product
| COMPUTE event_count per group
| DERIVE first_seen_time as minimum(event_time) per group, last_seen_time as maximum(event_time) per group
"
Detect WMI Event Subscription Persistence,"SEARCH Windows endpoint telemetry that records WMI Event Subscription activity (e.g., EventConsumer creation events) | FILTER events where event_id equals 20 | GROUP events by dest, dvc, object, object_category, object_path, signature, signature_id, src, status, user, user_id, vendor_product | COMPUTE count as total events per group, firstTime as earliest event timestamp per group, lastTime as latest event timestamp per group | FORMAT firstTime and lastTime as human-readable timestamps | APPLY post-aggregation filtering to remove known benign or environment-approved WMI EventConsumer creations (allowlists/expected sources) | OUTPUT dest, dvc, object, object"
Excessive File Deletion In WinDefender Folder,"SEARCH events from Sysmon data sources related to file deletion activity | FILTER events where EventCode is in [23, 26] | FILTER events where TargetFilename contains ""\ProgramData\Microsoft\Windows Defender\"" | GROUP events by action, dest, dvc, signature, signature_id, user, user_id, vendor_product | COMPUTE per group: event_count = COUNT(), firstTime = MIN(event_time), lastTime = MAX(event_time), file_path = UNIQUE_VALUES(file_path), file_hash = UNIQUE_VALUES(file_hash), file_name = UNIQUE_VALUES(file_name), file_modify_time = UNIQUE_VALUES(file_modify_time), process_name"
Windows Impair Defense Overide Win Defender Phishing Filter,"SEARCH Windows registry modification events (e.g., Sysmon Event ID 13) with fields: event_time, action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_data, registry_value_type, status, user, vendor_product
| FILTER registry_path contains ""\MicrosoftEdge\PhishingFilter""
| FILTER registry_value_name is one of [""EnabledV9"", ""PreventOverride""]
| FILTER registry_value_data equals ""0x00000000""
| GROUP BY action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_data, registry_value_type, status, user, vendor_product
| COMPUTE count = number of events per group, firstTime = earliest event_time, lastTime = latest event_time
| DERIVE firstTime_readable and lastTime_readable from firstTime and lastTime as human-readable timestamps
| APPLY optional environment-specific suppression (e.g., exclude known benign tools or test systems) if available
| OUTPUT host, action, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_data, registry_value_type,"
Cisco NVM - Suspicious Network Connection to IP Lookup Service API,"SEARCH Cisco Network Visibility Module Flow Data
| FILTER records where destination hostname matches any of the following domain patterns: ""*api.2ip.ua*"", ""*api.bigdatacloud.net*"", ""*api.ipify.org*"", ""*whatismyipaddress.com*"", ""*canireachthe.net*"", ""*checkip.amazonaws.com*"", ""*checkip.dyndns.org*"", ""*curlmyip.com*"", ""*db-ip.com*"", ""*edns.ip-api.com*"", ""*eth0.me*"", ""*freegeoip.app*"", ""*geoipy.com*"", ""*getip.pro*"", ""*icanhazip.com*"", ""*ident.me*"", ""*ifconfig.io*"", ""*ifconfig.me*"", ""*ip-api.com*"", ""*ip.360.cn*"", ""*ip.anysrc.net*"", ""*ip.taobao.com*"", ""*ip.tyk.nu*"", ""*ipaddressworld.com*"", ""*ipapi.co*"", ""*ipconfig.io*"", ""*ipecho.net*"", ""*ipinfo.io*"", ""*ipip.net*"", ""*iplocation.net*"", ""*ipof.in*"", ""*ipv6-test.com*"", ""*ipwho.is*"", ""*trackip.net*"", ""*inet-ip.info*"", ""*jsonip.com*"", ""*myexternalip.com*"", ""*seeip.org*"", ""*wgetip.com*"", ""*whatismyip.akamai.com*"", ""*whois.pconline.com.cn*"", ""*wtfismyip.com*"", ""*ip.cn*""
| FILTER out records where process_name is any of: ""brave.exe"", ""chrome.exe"", ""firefox.exe"", ""iexplore.exe"", ""maxthon.exe"", ""MicrosoftEdge.exe"", ""msedge.exe"", ""msedgewebview2.exe"", ""opera.exe"", ""safari.exe"", ""seamonkey.exe"", ""vivaldi.exe"", ""whale.exe""
| GROUP records BY src, dest, parent_process_path, parent_process_integrity_level, process_path, process_name, process_integrity_level, process_id, transport
| AGGREGATE within each group:
  - count events as event_count
  - minimum event time as firstTime
  - maximum"
Powershell Remote Services Add TrustedHost,
Disable Schedule Task,"SEARCH endpoint process execution events from EDR and Windows process creation logs | PARSE fields: timestamp, host, action, vendor_product, user, user_id, process_name, process_id, process_guid, process_hash, process_integrity_level, process_executable_path, process_path, command_line, original_file_name, parent_process_name, parent_process_id, parent_process_guid, parent_process_path, parent_process_executable | FILTER process_name equals ""schtasks.exe"" (case-insensitive) | FILTER command_line contains ""/change"" | FILTER command_line contains ""/disable"" | GROUP BY action, host, original_file_name, parent_process_executable, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, command_line, process_executable_path, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor"
Windows AD Dangerous Deny ACL Modification,
Detect Remote Access Software Usage Process,
Windows Scheduled Tasks for CompMgmtLauncher or Eventvwr,"SEARCH Windows Security Audit logs |
FILTER events where Event ID equals 4698 (scheduled task created) |
PARSE event payload to extract fields: timestamp, dest, action, TaskName, TaskContent, EventData_Xml |
FILTER events where TaskContent contains ""<Command>C:\Windows\System32\CompMgmtLauncher.exe</Command>"" OR ""<Command>C:\Windows\System32\zh-CN\eventvwr.msc</Command>"" OR ""<Command>C:\Windows\System32\eventvwr.msc</Command>"" |
GROUP records BY dest, action, EventData_Xml, TaskContent, TaskName |
COMPUTE event_count = COUNT(), first_seen = MIN(timestamp), last_seen = MAX(timestamp) |
FORMAT first_seen and last_seen as human-readable timestamps |
APPLY environment-specific allowlist to exclude known benign scheduled tasks or approved systems/users |
OUTPUT dest, action, TaskName, TaskContent, EventData_Xml, event_count, first_seen, last_seen"
Unload Sysmon Filter Driver,
Windows Impair Defense Change Win Defender Health Check Intervals,"SEARCH endpoint registry modification events (e.g., Sysmon Event ID 13) within the desired time range | FILTER registry_path contains ""\Windows Defender\ServiceKeepAlive"" (case-insensitive) | FILTER registry_value_data equals ""0x00000001"" | GROUP BY action, dest, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product | COMPUTE event_count = count(), first_time = earliest timestamp, last_time = latest timestamp | DERIVE first_time_readable and last_time_readable from first_time and last_time | APPLY optional environment allowlist to suppress known benign processes, users, devices, or paths | SELECT action, dest, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product, event_count, first_time, last_time, first_time_readable, last_time_readable | OUTPUT results"
Linux Gem Privilege Escalation,
Windows AD Dangerous Group ACL Modification,
Windows Raw Access To Disk Volume Partition,"SEARCH events from Sysmon where EventCode equals 9
| FILTER Device starts with the string ""\Device\HarddiskVolume""
| FILTER Image does not contain ""\Windows\System32\"" and does not contain ""\Windows\SysWOW64\""
| GROUP events by dest, dvc, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product, Device, Image
| COMPUTE count = number of events, firstTime = earliest event timestamp, lastTime = latest event timestamp
| FORMAT firstTime and lastTime into human-readable timestamps
| APPLY environment-specific allowlist or suppression rules to the aggregated results
| OUTPUT dest, dvc, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product, Device, Image, count, firstTime, lastTime"
Crowdstrike Privilege Escalation For Non-Admin User,"SEARCH CrowdStrike alert telemetry events within the desired time range
| FILTER records tagged as ""alert""
| PARSE fields: src_ip = event.EndpointIp, src_host = event.EndpointName, user = event.UserName, description = event.IncidentDescription, type = event.IncidentType, count_alerts = event.NumbersOfAlerts, severity = event.SeverityName, timestamp = event timestamp
| GROUP records BY src_ip, src_host, user, description, type, count_alerts, severity
| COMPUTE per group: event_count = count(records), firstTime = earliest(timestamp), lastTime = latest(timestamp)
| FILTER groups WHERE type contains ""Privilege escalation"" AND user does not contain ""adm"" AND user does not contain ""svc"" AND user does not contain ""admin""
| FORMAT firstTime and lastTime as human-readable timestamps
| APPLY organization-specific allowlist exclusions for known benign users, hosts, or incident descriptions
| OUTPUT src_ip, src_host, user, description, type, count_alerts, severity, event_count, firstTime, lastTime"
Windows Ingress Tool Transfer Using Explorer,
Windows System Shutdown CommandLine,
Crowdstrike Medium Identity Risk Severity,"SEARCH CrowdStrike identity risk events | FILTER records where (riskScoreSeverity equals ""MEDIUM"") OR (riskScore >= 0.55 AND riskScore < 0.70) | PARSE nested attributes to create top-level fields: severity = riskFactors"
MOVEit Empty Key Fingerprint Authentication Attempt,"SEARCH logs from Progress MOVEit Transfer SFTP components within the selected time range
| FILTER events where the message contains the exact text ""UserAuthRequestHandler: SftpPublicKeyAuthenticator: Attempted to authenticate empty public key fingerprint""
| GROUP events by log_source and event_message
| COMPUTE count = number of events in each group
| DERIVE first_seen_time = earliest event_time in group, last_seen_time = latest event_time in group
| APPLY environment-specific suppression to exclude known benign sources or test systems (if defined)
| OUTPUT log_source, event_message, count, first_seen_time, last_seen_time"
Active Setup Registry Autostart,"SEARCH registry value modification events from endpoint telemetry
| FILTER events where registry_value_name equals ""StubPath""
| FILTER events where registry_path contains ""\SOFTWARE\Microsoft\Active Setup\Installed Components"" (case-insensitive)
| GROUP events by action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product
| COMPUTE event_count as the total number of events per group, firstTime as the earliest timestamp per group, lastTime as the latest timestamp per group
| DERIVE firstTime_readable and lastTime_readable as human-readable representations of firstTime and lastTime
| APPLY optional environment-specific allowlists to exclude known benign Active Setup modifications (e.g., trusted installers or sanctioned software), using fields such as host, process_id/process_guid, registry_path, and registry_value_data
| OUTPUT action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product, event_count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Unusually Long Command Line,
Windows Credential Dumping LSASS Memory Createdump,
Linux Auditd Auditd Daemon Shutdown,"SEARCH Linux Auditd audit logs
| FILTER records where field ""type"" equals ""DAEMON_END""
| GROUP records by fields: type, op, res, auid, host, pid
| COMPUTE for each group: count = number of records, firstTime = earliest timestamp, lastTime = latest timestamp
| DERIVE firstTime_readable = convert firstTime to human-readable format, lastTime_readable = convert lastTime to human-readable format
| APPLY optional allowlist to exclude known benign shutdowns (for example, planned reboots or maintenance) based on contextual fields such as host, auid, op, res, or pid
| OUTPUT fields: type, op, res, auid, host, pid, count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Linux Deletion Of Init Daemon Script,"SEARCH filesystem activity telemetry that records file operations (including deletions)
| FILTER events where action equals ""deleted""
| FILTER events where file_path begins with ""/etc/init.d/""
| SELECT event_time, action, host, file_path, file_name, file_size, file_acl, file_hash, file_create_time, file_modify_time, file_access_time, process_id, process_guid, user, vendor_product
| GROUP BY action, host, file_access_time, file_create_time, file_hash, file_modify_time, file_name, file_path, file_acl, file_size, process_guid, process_id, user, vendor_product
| COMPUTE total_events = count(), first_seen_time = minimum(event_time"
Linux Clipboard Data Copy,
PowerShell Invoke WmiExec Usage,"SEARCH events from PowerShell Script Block Logging where Event ID equals 4104
| FILTER events where ScriptBlockText contains the substring ""invoke-wmiexec"" (case-insensitive)
| APPLY default value ""unknown"" to missing fields: dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText
| GROUP by dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText
| COMPUTE eventCount = count of events, firstTime = earliest event timestamp, lastTime = latest event timestamp
| FORMAT firstTime and lastTime as human-readable timestamps
| APPLY environment-specific suppression filter to exclude known-benign entities or patterns
| OUTPUT dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, eventCount, firstTime, lastTime"
Windows Post Exploitation Risk Behavior,"SEARCH risk events containing fields: timestamp, calculated_risk_score, analyticstories, risk_object, risk_object_type, annotations.mitre_attack.mitre_tactic, annotations.mitre_attack.mitre_tactic_id, annotations.mitre_attack.mitre_technique_id, tag, source
| FILTER records where analyticstories contains the phrase ""Windows Post-Exploitation""
| GROUP records by risk_object, risk_object_type, annotations.mitre_attack.mitre_tactic
| COMPUTE for each group:
  - firstTime = minimum timestamp
  - lastTime = maximum timestamp
  - risk_score = sum of calculated_risk_score
  - risk_event_count = count of records in the group
  - tactic_ids = set of unique annotations.mitre_attack.mitre_tactic_id
  - mitre_tactic_id_count = count of unique values in tactic_ids
  - technique_ids = set of unique annotations.mitre_attack.mitre_technique_id
  - mitre_technique_id_count = count of unique values in technique_ids
  - tags = set of unique tag values
  - sources = set of unique source values
  - source_count = count of unique values in sources
| FORMAT firstTime and lastTime as human-readable timestamps
| FILTER groups where source_count >= 4
| OUTPUT risk_object, risk_object_type, annotations.mitre_attack.mitre_tactic, firstTime, lastTime, risk_score, risk_event_count, tactic_ids, mitre_tactic_id_count, technique_ids, mitre_technique_id_count, tags,"
Windows Modify Registry Tamper Protection,"SEARCH endpoint registry modification events (for example, Sysmon Event ID 13) |
FILTER events where registry_path contains ""\SOFTWARE\Microsoft\Windows Defender\Features\TamperProtection"" |
FILTER events where registry_value_data equals ""0x00000000"" (Tamper Protection disabled) |
GROUP events BY action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user |
COMPUTE count = number of events per group, firstTime = earliest event_time per group, lastTime = latest event_time per group |
CONVERT firstTime and lastTime to human-readable timestamps |
APPLY environment-specific allowlists to exclude known benign hosts, processes, or users (if defined) |
OUTPUT count, firstTime, lastTime, action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user"
Web Servers Executing Suspicious Processes,
Detect Rundll32 Application Control Bypass - advpack,"SEARCH process-creation events from endpoint telemetry sources (e.g., Sysmon Event ID 1, Windows Security 4688, EDR process telemetry) within the desired time range
| PARSE fields from each event: timestamp, host, vendor_product, action, process_name, process_path, executable_path, command_line, original_file_name, process_id, process_guid, process_hash, process_integrity_level, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_command_line,"
Cobalt Strike Named Pipes,"SEARCH events from Sysmon data where EventID is 17 or 18
| FILTER records where PipeName matches any of the following patterns (wildcard “*” matches any suffix):
  ""\\DserNamePipe*"", ""\\interprocess_*"", ""\\lsarpc_*"", ""\\mojo_*"", ""\\msagent_*"", ""\\MSSE-*"",
  ""\\netlogon_*"", ""\\ntsvcs*"", ""\\postex_*"", ""\\samr_*"", ""\\spoolss_*"", ""\\srvsvc_*"",
  ""\\status_*"", ""\\UIA_PIPE*"", ""\\win_svc*"", ""\\winsock*"", ""\\wkssvc_*""
| GROUP records BY dest, dvc, pipe_name, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product, Image, PipeName
| COMPUTE count = number of records in group, firstTime = earliest timestamp in group, lastTime = latest timestamp in group
| DERIVE firstTime_readable = human-readable representation of firstTime, lastTime_readable = human-readable representation of lastTime
| OUTPUT dest, dvc, pipe_name, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product, Image, PipeName, count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Windows Identify PowerShell Web Access IIS Pool,"SEARCH Windows Security event logs |
FILTER records where event_id is one of [4648, 4624, 4625] |
FILTER records where subject_user_name equals ""pswa_pool"" |
PROJECT event_id, subject_user_name, target_user_name, computer, target_domain_name, process_name, logon_type, target_server_name |
AGGREGATE over all remaining records to compute:
- Connection Attempts = COUNT of records where event_id == 4648
- Successful Logons = COUNT of records where event_id == 4624
- Unsuccessful Logons = COUNT of records where event_id == 4625
- Unique Target Accounts = COUNT_DISTINCT(target_user_name)
- PSWA Host = DISTINCT_SET(computer)
- Unique Target Domains = COUNT_DISTINCT(target_domain_name)
- PSWA Process (raw) = DISTINCT_SET(process_name)
- Target Users List = DISTINCT_SET(target_user_name)
- Target Servers List = DISTINCT_SET(target_server_name)
- Logon Types = DISTINCT_SET(logon_type) |
DERIVE PSWA_Running = ""Yes"" |
DERIVE PSWA Process = FILENAME_FROM_PATH(FIRST_ELEMENT(PSWA Process (raw))) |
PROJECT PSWA_Running, PSWA Host, PSWA Process,"
Linux SSH Authorized Keys Modification,
Windows Query Registry UnInstall Program List,"SEARCH Windows Security Event logs |
FILTER events where EventCode equals 4663 |
FILTER events where object_file_path contains ""\Microsoft\Windows\CurrentVersion\Uninstall\"" |
GROUP events by object_file_name, object_file_path, process_name, process_path, process_id, EventCode, dest |
COMPUTE per group: count = number of events, firstTime = earliest event timestamp, lastTime = latest event timestamp |
COMPUTE firstTime_readable = convert_timestamp_to_readable(firstTime), lastTime_readable = convert_timestamp_to_readable(lastTime) |
FILTER exclude groups matching organization-defined allowlists or expected processes/paths (optional) |
OUTPUT object_file_name, object_file_path, process_name, process_path, process_id, EventCode, dest, count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Executables Or Script Creation In Temp Path,
Suspicious Image Creation In Appdata Folder,
Windows Unusual Count Of Invalid Users Fail To Auth Using Kerberos,"SEARCH Windows Security events with event_id equals 4768 within a defined time range
| FILTER records where kerberos_failure_code equals ""0x6"" OR failure_reason contains ""user not found""
| PARSE fields to extract timestamp, user, domain, client_address, workstation_name, kerberos_failure_code
| FILTER to a specific user if a user parameter is provided (user equals provided_user)
| DERIVE source_endpoint as client_address if present, otherwise use workstation_name
| GROUP records by source_endpoint over a sliding time window (for example, 15 minutes) and COMPUTE:
    - distinct_user_count as the number of unique user values
    - attempt_count as the total number of records
    - users_sample as a limited list or set of distinct users
    - first_seen as the earliest timestamp
    - last_seen as the latest timestamp
| FILTER grouped results where distinct_user_count is greater than or equal to a configurable threshold (for example, 5)
| SORT results by distinct_user_count descending, then attempt_count descending
| OUTPUT source_endpoint, distinct_user_count, attempt_count, users_sample, first_seen, last_seen"
XSL Script Execution With WMIC,"SEARCH endpoint process creation events with fields: event_time, host, user, user_id, vendor_product, action, process_name, process_path, process_command_line, process_id, process_guid, process_hash, process_integrity_level, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_command_line, parent_process_exec, process_exec
| FILTER action indicates a process start or creation
| FILTER process executable is WMIC by requiring any of:
  - process_name equals ""wmic.exe""
  - original_file_name equals ""wmic.exe""
  - process_path ends with ""\wmic.exe"" or ""/wmic.exe""
| FILTER process_command_line contains the token sequence ""os get""
| FILTER process_command_line contains the token ""/format:""
| FILTER process_command_line contains the substring "".xsl""
| GROUP BY host, action, vendor_product, user, user_id, process_name, process_path, process_exec, process_command_line, process_id, process_guid, process_hash, process_integrity_level, original_file_name, parent_process_name, parent_process_path, parent_process_exec, parent_process_id, parent_process_guid
  AGGREGATE count as event_count, minimum event_time as first_time, maximum event_time as last_time
| DERIVE first_seen as human-readable timestamp from first_time, last_seen as human-readable timestamp from last_time
| APPLY optional allowlist/suppression rules to exclude known-benign WMIC XSL usage (if defined by the environment)
| OUTPUT event_count, first_seen, last_seen, host, action, vendor_product, user, user_id, process_name, process_path, process_exec, process_command_line, process_id, process_guid, process_hash, process_integrity_level, original_file_name, parent_process_name, parent_process_path, parent_process_exec, parent_process_id, parent_process_guid"
Windows Increase in User Modification Activity,
Linux Auditd Virtual Disk File And Directory Discovery,"SEARCH Linux Auditd process execution (execve) events |
FILTER events where command_line contains ""find"" OR command_line contains ""grep"" |
FILTER events where command_line also contains any of "".vhd"", "".vhdx"", "".vmdk"" |
SELECT fields: timestamp, host, executable_path, command_name, command_line, argument_count |
GROUP events by host, command_line, argument_count |
COMPUTE total_events = count of events, first_time = earliest timestamp, last_time = latest timestamp per group |
FORMAT first_time and last_time to human-readable strings |
APPLY environment-specific allowlists to exclude known benign hosts, processes, or command patterns if defined |
OUTPUT host, command_line, argument_count, total_events, first_time, last_time, executable_path, command_name"
Windows AppLocker Block Events,"SEARCH Windows AppLocker event logs | FILTER events where EventCode is one of [8007, 8004, 8022, 8025, 8029, 8040] | PARSE the structured XML in field UserData_Xml to extract nested attributes | FLATTEN attributes under RuleAndFileData into top-level fields | DERIVE user = TargetUser and dest = Computer | GROUP BY dest, PolicyName, RuleId, user, TargetProcessId, FilePath, FullFilePath, EventCode AGGREGATE count as eventCount, minimum timestamp as firstTime, maximum timestamp as lastTime | ENRICH by joining on EventCode with a reference mapping of AppLocker event codes to Description | FORMAT firstTime and lastTime into human-readable timestamps | APPLY optional environment-specific suppression/allowlist filters if configured | OUTPUT dest, PolicyName, RuleId, user, TargetProcessId, FilePath, FullFilePath, EventCode, Description, eventCount, firstTime, lastTime"
Rundll32 CreateRemoteThread In Browser,"SEARCH Windows endpoint telemetry for remote thread creation events (CreateRemoteThread, EventID = 8) from Sysmon-like data, including timestamp and fields: EventID, Guid, NewThreadId, ProcessID, SecurityID, SourceImage, SourceProcessGuid, SourceProcessId, StartAddress, StartFunction, StartModule, TargetImage, TargetProcessGuid, TargetProcessId, UserID, host/device identifier, parent process metadata (name, path, id, guid, executable), process metadata (name, path, id, guid, executable), code signature metadata (signature, signature_id), user identifiers, and vendor/product identifiers
| FILTER records where SourceImage path ends with ""rundll32.exe"" (case-insensitive match)
| FILTER records where TargetImage process name is one of [""firefox.exe"", ""chrome.exe"", ""iexplore.exe"", ""microsoftedgecp.exe""] (case-insensitive match)
| GROUP BY EventID, Guid, NewThreadId, ProcessID, SecurityID, SourceImage, SourceProcessGuid, SourceProcessId, StartAddress, StartFunction, StartModule, TargetImage, TargetProcessGuid, TargetProcessId, UserID, host/device identifier, parent process name, parent process path, parent process id, parent process guid, parent process executable, process name, process path, process id, process guid, process executable, signature, signature_id, user identifiers, vendor/product identifiers AGGREGATE count = COUNT(events"
Wmiprsve LOLBAS Execution Process Spawn,
Get ADDefaultDomainPasswordPolicy with Powershell,
Detect Regasm with Network Connection,"SEARCH endpoint network-connection events from Sysmon with event_id = 3 | FILTER process_name equals ""regasm.exe"" | FILTER dest_ip not in private address ranges 10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16 | GROUP BY action, app, dest, dest_ip, dest_port, direction, dvc, protocol, protocol_version, src, src_ip, src_port, transport, user, vendor_product, process_name, process_exec, process_guid, process_id | COMPUT"
Windows Compatibility Telemetry Suspicious Child Process,"SEARCH process-creation telemetry from Windows Security Event 4688, Sysmon Event ID 1, and EDR process data; include fields: event_time, action, host, vendor_product, user, user_id, original_file_name, process_name, process_path, process_command_line, process_id, process_guid, process_hash, process_integrity_level, parent_process_name, parent_process_path, parent_process_command_line, parent_process_id, parent_process_guid
| FILTER records where parent_process_name equals ""CompatTelRunner.exe""
| FILTER records where process_command_line contains "" -cv:""
| FILTER records where process_command_line does not contain "" -m:""
| GROUP BY action, host, vendor_product, user, user_id, original_file_name, parent_process_name, parent_process_path, parent_process_command_line, parent_process_id, parent_process_guid, process_name, process_path, process_command_line, process_id, process_guid, process_hash, process_integrity_level
| DERIVE count = number of records in group, first_seen_time = minimum(event_time), last_seen_time = maximum(event_time)
| FORMAT first_seen_time and last_seen_time as human-readable timestamps (e.g., ISO 8601)
"
Windows Vulnerable Driver Loaded,"SEARCH events from Windows Sysmon driver load telemetry
| FILTER where EventCode equals 6
| GROUP BY ImageLoaded, dest, dvc, process_hash, process_path, signature, signature_id, user_id, vendor_product AGGREGATE count as event_count, earliest(_time) as firstTime, latest(_time) as lastTime
| ENRICH USING dataset ""loldrivers"" ON driver_name = ImageLoaded ADD is_driver, driver_description
| FILTER where is_driver equals true
| FORMAT convert firstTime and lastTime to human-readable timestamps as firstTime_readable, lastTime_readable
| OUTPUT ImageLoaded, dest, dvc, process_hash, process_path, signature, signature_id, user_id, vendor_product, event_count, firstTime, lastTime, firstTime_readable, lastTime_readable, is_driver, driver_description"
Windows AutoIt3 Execution,"SEARCH endpoint process-creation events from relevant telemetry sources within the desired time range |
FILTER events where process_name equals ""autoit3.exe"" OR process_name matches the pattern ""autoit*.exe"" OR original_file_name equals ""autoit3.exe"" OR original_file_name matches the pattern ""autoit*.exe"" |
GROUP events by action, dest (host), original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product |
COMPUTE event_count = count of events per group, first_seen = minimum event timestamp per group, last_seen = maximum event timestamp per group |
FORMAT first_seen and last_seen as human-readable timestamps |
APPLY optional environment-specific exclusion filters to remove known benign or approved AutoIt usage |
OUTPUT grouped fields with event_count, first_seen, and last_seen"
SecretDumps Offline NTDS Dumping Tool,
Windows Domain Admin Impersonation Indicator,
Microsoft Defender ATP Alerts,
Windows System Binary Proxy Execution Compiled HTML File Decompile,"SEARCH process execution events from data sources: Sysmon Event ID 1, Windows Security 4688, CrowdStrike process telemetry |
FILTER events to those representing process creation or start |
FILTER where executable_name equals ""hh.exe"" OR original_file_name equals ""hh.exe"" OR executable_path ends with ""\hh.exe"" (case-insensitive comparison) |
FILTER where command_line contains the token ""-decompile"" (case-insensitive, treat as a standalone parameter if possible) |
GROUP by action, host/device, vendor_product, user, user_id, executable_name, executable_path, command_line, executable_hash, process_id, process_guid, process_integrity_level, parent_executable_name, parent_executable_path, parent_process_id, parent_process_guid, parent_command_line |
COMPUTE event_count per group, first_time = minimum event time per group, last_time = maximum event time per group |
COMPUTE first_time_readable = convert first_time to human-readable timestamp, last_time_readable = convert last_time to human-readable timestamp |
APPLY environment-specific suppression filters (for known benign hh.exe -decompile usage) if defined |
OUTPUT all grouped fields plus event_count, first_time_readable, last_time_readable"
Kerberos Pre-Authentication Flag Disabled in UserAccountControl,
Crowdstrike Medium Severity Alert,
Disable Defender Spynet Reporting,
Windows Modify System Firewall with Notable Process Path,"SEARCH process creation and process activity events from:
- Windows Sysmon Event ID 1
- Windows Security Event ID 4688
- EDR process telemetry (e.g., CrowdStrike ProcessRollup2)
within the analysis time window
|
PARSE each event to extract:
- timestamp
- destination_host
- user, user_id
- vendor_product
- action (process event action)
- process_name, process_path, process_executable, process_id, process_guid, process_hash, process_integrity_level, process_command_line
- parent_process_name, parent_process_path, parent_process_exec, parent_process_id, parent_process_guid, parent_process (full command line if available)
- original_file_name (if present)
|
FILTER records where process_command_line contains all of the tokens (case-insensitive): ""firewall"", ""allow"", ""add"", ""enable""
|
FILTER records where process_command_line contains any of the following path substrings (case-insensitive; treat / and \ equivalently):
- ""\windows\fonts\""
- ""\windows\temp\""
- ""\users\public\""
- ""\windows\debug\""
- ""\users\administrator\music\""
- ""\windows\servicing\""
- ""\users\default\""
- ""recycle.bin""
- ""\windows\media\""
- ""\windows\repair\""
- ""\temp\""
- ""\perflogs\""
|
GROUP records by:
- action
- destination_host
- original_file_name
- parent_process (full command line if available)
- parent_process_exec
- parent_process_guid
- parent_process_id
- parent_process_name
- parent_process_path
- process_command_line
- process_executable
- process_guid
- process_hash
- process_id
- process_integrity_level
- process_name
- process_path
- user
- user_id
- vendor_product
|
COMPUTE for each group"
Windows Chromium Browser No Security Sandbox Process,
Linux System Reboot Via System Request Key,
Linux Puppet Privilege Escalation,
Windows Default Group Policy Object Modified,"SEARCH Windows Security Event Logs (Directory Service Changes) |
FILTER events where event_id equals 5136 |
FILTER events where object_class equals ""groupPolicyContainer"" |
FILTER events where attribute_name equals ""versionNumber"" |
FILTER events where object_dn matches either:
- ""CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=POLICIES,CN=SYSTEM,DC=*""
- ""CN={6AC1786C-016F-11D2-945F-00C04FB984F9},CN=POLICIES,CN=SYSTEM,DC=*""
(DC=* indicates any domain components) |
SELECT fields: event_time, object_dn, subject_user_sid, attribute_value, computer, ds_name, destination |
GROUP records by object_dn, subject_user_sid, attribute_value, computer, ds_name, destination |
COMPUTE firstTime = earliest(event_time) per group, lastTime = latest(event_time) per group |
RENAME attribute_value to versionNumber |
DERIVE firstTime_readable = human_readable_timestamp(firstTime), lastTime_readable = human_readable_timestamp(lastTime) |
APPLY suppression to remove groups matching known benign change lists or maintenance windows (if available) |
OUTPUT object_dn, subject_user_sid, versionNumber, computer, ds_name, destination, firstTime, lastTime, firstTime_readable, lastTime_readable"
Cisco NVM - Rundll32 Abuse of MSHTML.DLL for Payload Download,
Windows New Service Security Descriptor Set Via Sc.EXE,
MS Exchange Mailbox Replication service writing Active Server Pages,"SEARCH process telemetry events
| FILTER process_name equals ""MSExchangeMailboxReplication.exe""
| DERIVE time_bucket = truncate(event_time to 1 hour)
| SELECT host, process_id, process_guid, process_name, time_bucket
| JOIN ON host AND (process_guid if available else process_id else time_bucket) [
    SEARCH file creation/write telemetry events
    | FILTER file_path contains any of [""\HttpProxy\owa\auth\"", ""\inetpub\wwwroot\aspnet_client\"", ""\HttpProxy\OAB\""] AND file_name ends with "".aspx""
    | DERIVE time_bucket = truncate(event_time to 1 hour)
    | DERIVE file_create_time = coalesce(file_create_time, event_time)
    | SELECT host, file_create_time, file_name, file_path, process_id, process_guid, time_bucket
  ]
| DEDUP by host, file_create_time, file_path
| SELECT host as dest, file_create_time, file_name, file_path, process_name
| OUTPUT results"
Process Deleting Its Process File Path,
Windows PowerShell Process With Malicious String,
Windows Cached Domain Credentials Reg Query,
Windows Known GraphicalProton Loaded Modules,
Remote Process Instantiation via DCOM and PowerShell,
Windows File Share Discovery With Powerview,"SEARCH PowerShell Script Block Logging events where EventCode equals 4104 |
FILTER events where ScriptBlockText matches pattern ""Invoke-ShareFinder*"" |
REPLACE missing values in fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with a placeholder value |
GROUP events BY dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText |
COMPUTE count = number of events per group, firstTime = earliest event timestamp per group, lastTime = latest event timestamp per group |
DERIVE firstTime_readable = convert firstTime to human-readable format, lastTime_readable = convert lastTime to human-readable format |
FILTER out groups matching known-benign allowlists or exclusions for legitimate administrative use (if defined) |
OUTPUT dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Clop Ransomware Known Service Name,"SEARCH Windows System Event Logs for service creation events (event_id = 7045)
| FILTER records where service_name is any of [""SecurityCenterIBM"", ""WinCheckDRVs""]
| GROUP records BY computer, event_id, service_name, start_type, service_type
| COMPUTE count = number of records in group, first_seen_time = minimum event_time in group, last_seen_time = maximum event_time in group
| DERIVE first_seen_time_readable = convert_timestamp_to_readable(first_seen_time), last_seen_time_readable = convert_timestamp_to_readable(last_seen_time)
| APPLY environment-specific allowlists or suppression rules to exclude known benign computers or services if defined
| OUTPUT computer, event_id, service_name, start_type, service_type, count, first_seen_time, last_seen_time, first_seen_time_readable, last_seen_time_readable"
Windows Account Discovery With NetUser PreauthNotRequire,"SEARCH events from PowerShell Script Block Logging where event identifier equals 4104 |
FILTER events where script block text contains ""Get-NetUser"" AND contains ""-PreauthNotRequire"" |
REPLACE missing values in [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with an empty string to ensure consistent grouping |
GROUP events BY [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] |
AGGREGATE compute total events as count, earliest event timestamp as firstTime, and latest event timestamp as lastTime for each group |
FORMAT firstTime and lastTime as human-readable timestamps |
APPLY optional allowlist/suppression rules to exclude known benign activity |
OUTPUT [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, count, firstTime, lastTime]"
Dump LSASS via procdump,"SEARCH endpoint process-creation/telemetry events from Sysmon 1, Windows Security 4688, and EDR process data |
PARSE fields: event_time, host, vendor_product, action, user, user_id, process_name, original_file_name, process_path, process_exec, process_command_line, process_id, process_guid, process_hashes, process_integrity_level, parent_process_name, parent_process_path, parent_process_exec, parent_process_id, parent_process_guid |
DERIVE normalized_command_line = lowercase(process_command_line), normalized_process_name = lowercase(process_name), normalized_original_name = lowercase(original_file_name), normalized_process_path = lowercase(process_path) |
FILTER records where normalized_process_name contains ""procdump"" OR normalized_original_name = ""procdump.exe"" OR normalized_process_path contains ""\procdump.exe"" |
FILTER records where normalized_command_line contains "" -ma "" OR normalized_command_line contains "" -mm "" (allow for leading/trailing spaces and argument order) |
FILTER records where normalized_command_line contains ""lsass"" (e.g., ""lsass"" or ""lsass.exe"") |
GROUP BY action, host, vendor_product, user, user_id, original_file_name, parent_process_name, parent_process_path, parent_process_exec, parent_process_guid, parent_process_id, process_name, process_path, process_exec, process_command_line, process_guid, process_hashes, process_id, process_integrity_level |
COMPUTE count = number of events in group, first_seen_time = minimum(event_time), last_seen_time = maximum(event_time) |
FORMAT first_seen_time and last_seen_time to human-readable timestamps |
APPLY optional allowlist/suppression filters for known/approved use of procdump targeting lsass |
OUTPUT grouped records with count, first_seen_time, last_seen_time, and all grouping fields"
Get ADUserResultantPasswordPolicy with Powershell Script Block,"SEARCH PowerShell Script Block Logging events | FILTER where EventCode equals 4104 | FILTER where ScriptBlockText contains the string ""Get-ADUserResultantPasswordPolicy"" | HANDLE NULLS by replacing missing values in fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with a placeholder | GROUP records BY dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText | COMPUTE event_count as the number of records per group, firstTime as the minimum timestamp per group, lastTime as the maximum timestamp per group | FORMAT firstTime and lastTime into human-readable timestamps | APPLY environment-specific suppression filters to remove known benign or authorized activity (optional) | OUTPUT grouped fields plus event_count, firstTime, lastTime"
Kerberos User Enumeration,"SEARCH Windows Security events with Event ID 4768 (Kerberos TGT requests) within the chosen time range
| PARSE fields needed for analysis: timestamp, src_ip, dest, TargetUserName, Status
| FILTER records where Status equals 0x6 (user does not exist)
| FILTER records where TargetUserName does not end with ""$"" (exclude machine accounts)
| DERIVE time_bucket as the timestamp rounded down to 2-minute intervals
| GROUP records BY time_bucket, src_ip
| COMPUTE per group: unique_accounts = distinct_count(TargetUserName), tried_accounts = set(TargetUserName), dest_hosts = set(dest)
| COMPUTE per src_ip across all time_buckets: comp_avg = average(unique_accounts), comp_std = standard_deviation(unique_accounts), and associate these metrics back to each group for that src_ip
| DERIVE upperBound = comp_avg + (3 * comp_std)
| DERIVE isOutlier = 1 if unique_accounts > 10 AND unique_accounts >= upperBound, else 0
| FILTER records where isOutlier equals 1
| APPLY any environment-specific suppression lists or allowlists to remove known benign sources or activities (optional)
| OUTPUT time_bucket, src_ip, unique_accounts, tried_accounts, dest_hosts, comp_avg, comp_std, upperBound, isOutlier"
Linux Hardware Addition SwapOff,"SEARCH process execution events from endpoint telemetry over the desired time range
| FILTER events where process_name equals ""swapoff""
| GROUP records BY action, dest, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product AND COMPUTE count as event_count, minimum event_time as firstTime, maximum event_time as lastTime
| DERIVE firstTime_readable by converting firstTime to a human-readable timestamp
| APPLY environment-specific allowlist or suppression rules for this analytic if available
| OUTPUT all grouping fields plus event_count, firstTime, firstTime_readable, lastTime"
CMD Carry Out String Command Parameter,
Linux RPM Privilege Escalation,"SEARCH process execution events from endpoint or OS audit telemetry containing: timestamp, host/device, process_name, process_path, process_executable, process_command_line, process"
Linux Auditd Clipboard Data Copy,"SEARCH Linux Auditd Execve process execution events with fields: host, comm, exe, execve_command, argc, timestamp
| FILTER events where execve_command contains any of [""xclip"", ""clipboard""]
| FILTER events where execve_command also contains any of [""-o"", ""-selection "", ""-sel ""]
| DERIVE dest = host, process_name = comm, process = exe
| GROUP events by dest, execve_command, argc
| COMPUTE count = number of events, firstTime = minimum timestamp, lastTime = maximum timestamp for each group
| FORMAT firstTime and lastTime as human-readable timestamps
| APPLY allowlist or environment-specific suppression to remove known benign clipboard automation
| OUTPUT fields: dest, execve_command, argc, count, firstTime, lastTime"
Windows Service Stop Win Updates,"SEARCH Windows System event logs
| FILTER event_id equals 7040
| PARSE fields: event_time, Computer, Error_Code, service_name, start_mode, param1, param2, param3, param4
| FILTER (service_name in [""Update Orchestrator Service for Windows Update"", ""WaaSMedicSvc"", ""Windows Update""] OR param1 in [""UsoSvc"", ""WaaSMedicSvc"", ""wuauserv""])
| FILTER (param3 equals ""disabled"" OR start_mode equals ""disabled"")
| GROUP BY Computer, Error_Code, service_name, start_mode, param1, param2, param3, param4 AGGREGATE count as event_count, min(event_time) as firstTime, max(event_time) as lastTime
| DERIVE dest = Computer
| DERIVE firstTimeReadable = human_readable(firstTime), lastTimeReadable = human_readable(lastTime)
| APPLY optional environment-specific allowlist to exclude known benign hosts or services
| OUTPUT dest, Error_Code, service_name, start_mode, param1, param2, param3, param4, event_count, firstTime, lastTime, firstTimeReadable, lastTimeReadable"
Windows AD Dangerous User ACL Modification,"SEARCH data from Windows Security Audit logs where event_id equals 5136 and object_class equals ""user""
| PARSE each event to extract at least: timestamp, operation_type, attribute_value, object_class, object_dn, op_correlation_id, source_user, subject_logon_id, object_sid (if present), and target_sid within ACE strings
| GROUP events by object_class, object_dn, op_correlation_id, source_user, subject_logon_id and
  - DERIVE earliest_timestamp as the minimum timestamp in the group
  - DERIVE old_value as the set of attribute_value entries where operation_type indicates ""value removed""
  - DERIVE new_value as the set of attribute_value entries where operation_type indicates ""value added""
| PARSE from old_value"
Windows Exfiltration Over C2 Via Powershell UploadString,"SEARCH PowerShell Script Block Logging events
| FILTER EventCode equals 4104
| FILTER ScriptBlockText contains ""Net.webclient"" AND ScriptBlockText contains ""UploadString""
| APPLY replace nulls with empty values on fields: dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText
| GROUP BY dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText
| COMPUTE event_count = number of events, firstTime = earliest event timestamp, lastTime = latest event timestamp per group
| FORMAT firstTime and lastTime as human-readable datetimes
| APPLY environment-specific exclusion filters to remove known benign matches
| OUTPUT dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, event_count, firstTime, lastTime"
Windows Svchost.exe Parent Process Anomaly,
Linux Preload Hijack Library Calls,"SEARCH endpoint process execution events on Linux within the desired time range | FILTER records where the process command line contains the substring ""LD_PRELOAD"" | GROUP records by the following attributes (one result per unique combination): action, host, original_file_name, parent_process_command_line, parent_process_executable, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_command_line, process_executable, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user_name, user_id, product | COMPUTE event_count for each group, first_seen_time = minimum event time in group, last_seen_time = maximum event time in group | COMPUTE first_seen_readable = convert first_seen_time to human-readable timestamp, last_seen_readable = convert last_seen_time to human-readable timestamp | APPLY allowlist"
Windows Multiple NTLM Null Domain Authentications,
Windows Sensitive Registry Hive Dump Via CommandLine,
Linux Busybox Privilege Escalation,"SEARCH endpoint process creation events from Linux hosts within the chosen time range |
PARSE fields: timestamp, host, vendor_product, action, user, user_id, process_name, process_path, process_executable, process_id, process_guid, process_hash, process_command_line, original_file_name, parent_process_name, parent_process_path, parent_process_executable, parent_process_id, parent_process_guid, parent_process_command_line, process_integrity_level |
FILTER where operating_system equals Linux (if available) |
FILTER where action indicates a process start/creation event |
FILTER where process_command_line contains ""busybox"" (case-insensitive) |
FILTER where process_command_line also contains ""sh"" (case-insensitive) |
FILTER where process_command_line also contains ""sudo"" (case-insensitive) |
GROUP by host, action, original_file_name, parent_process_command_line, parent_process_executable, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_command_line, process_executable, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product |
COMPUTE count = number of events per group, first_seen_time = minimum(timestamp), last_seen_time = maximum(timestamp) |
FORMAT first_seen_time and last_seen_time as human-readable strings |
APPLY environment-specific allowlists or suppression rules to remove known legitimate BusyBox with sudo usage (if defined) |
OUTPUT the grouped fields with count, first_seen_time, and last_seen_time"
Windows Registry Dotnet ETW Disabled Via ENV Variable,"SEARCH endpoint registry modification events (e.g., Sysmon Event ID 13) with fields: timestamp, action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_data, registry_value_type, status, user, vendor_product | FILTER registry_path contains ""\Environment"" | FILTER registry_value_name equals ""COMPlus_ETWEnabled"" | FILTER registry_value_data equals 0 OR equals ""0x000000000"" OR numerically equals 0 | FILTER registry_value_data IS NOT NULL | GROUP BY action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry"
Crowdstrike Admin With Duplicate Password,
Windows Remote Management Execute Shell,"SEARCH Windows process creation events within the selected time range from sources: Sysmon (Event ID 1) and Windows Security (Event ID 4688)
| PARSE each event to extract fields: timestamp, host/destination, vendor_product, action, user, user_id, process_name, process_path, process_id, process_guid, process_hash, process_integrity_level, process_command_line, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_exec, parent_process_command_line
| FILTER events where parent_process_name equals ""winrshost.exe""
| FILTER remaining events where process_name equals ""cmd.exe"" OR process_name contains the substring ""powershell"" (case-insensitive)
| GROUP the filtered events by: host/destination, vendor_product, action, user, user_id, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_exec, parent_process_command_line, process_name, process_path, process_id, process_guid, process_hash, process_integrity_level, process_command_line, original_file_name
| DERIVE firstTime as the minimum timestamp per group and lastTime as the maximum timestamp per group
| FORMAT firstTime and lastTime as human-readable timestamps
| OUTPUT one record per group with all grouped fields plus firstTime and lastTime"
Disabling Remote User Account Control,"SEARCH registry modification events from Windows endpoints (including sources that record registry value set operations, such as Sysmon Event ID 13) | PARSE fields: timestamp, action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, product | FILTER registry_path contains ""\Microsoft\Windows\CurrentVersion\Policies\"
SAM Database File Access Attempt,"SEARCH Windows Security Event Log events where EventCode equals 4663 |
FILTER events where ObjectName path contains any of:
- \Windows\System32\config\SAM
- \Windows\System32\config\SYSTEM
- \Windows\System32\config\SECURITY |
FILTER"
Windows Impair Defense Define Win Defender Threat Action,"SEARCH endpoint registry modification events from Windows hosts (e.g., registry value set/write) within the desired time range | FILTER events where registry_path contains ""\Windows Defender\Threats\ThreatSeverityDefaultAction"" | FILTER events where registry_value_data equals ""0x00000001"" OR equals ""9"" (accept both string or numeric representations) | FILTER events where event type indicates a registry value set operation (for Sysmon, Event ID equals 13) | GROUP events by action, dest (host), process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product | AGGREGATE count of events per group, earliest event_time as firstTime, latest event_time as lastTime | COMPUTE firstTime_readable and lastTime_readable from firstTime and lastTime | APPLY environment-specific suppression rules for known benign changes (if any) | OUTPUT all grouped fields along with count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Windows RDP File Execution,
Suspicious Process Executed From Container File,
Linux Auditd Setuid Using Setcap Utility,"SEARCH Linux Auditd Execve events
| PARSE fields needed: event_time, host, comm, exe, argc, execve_command
| FILTER events where execve_command contains the substring ""setcap ""
| FILTER events where execve_command contains any of the substrings: ""cap_setuid+ep"", ""cap_setuid=ep"", ""cap_net_bind_service+p"", ""cap_net_raw+ep"", ""cap_dac_read_search+ep""
| GROUP events by host, execve_command, argc
| COMPUTE count = number of events per group, first_time = earliest event_time per group, last_time = latest event_time per group
| DERIVE first_time_readable and last_time_readable by converting first_time and last_time to human-readable timestamps
| APPLY exclusion rules to remove groups matching organization-defined allowlists (for example, known legitimate setcap uses by path, host, or exact execve_command)
| OUTPUT host, execve_command, argc, count, first_time, last_time, first_time_readable, last_time_readable"
Windows Impair Defense Set Win Defender Smart Screen Level To Warn,"SEARCH endpoint registry value set/modification events (e.g., from host-based telemetry that records registry changes) within the desired time range
| FILTER events to those where registry_path contains ""\Microsoft\Windows\System\ShellSmartScreenLevel"" (case-insensitive match)
| FILTER events to those where registry_value_data equals ""Warn""
| FILTER events to those with an action indicating a write/set/update succeeded (e.g., status indicates success)
| GROUP events by action, host, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, status, user, vendor_product
| COMPUTE event_count for each group, first_seen_time as the minimum event timestamp in the group, last_seen_time as the maximum event timestamp in the group
| DERIVE human_readable_first_seen_time and human_readable_last_seen_time from first_seen_time and last_seen_time
| APPLY optional exclusion rules to remove known benign or administrative changes (e.g., approved change processes, known management tools)
| OUTPUT the grouped fields with event_count, first_seen_time, last_seen_time, human_readable_first_seen_time, human_readable_last_seen_time, ordered by last_seen_time descending"
MacOS plutil,"SEARCH osquery process event records
| PARSE nested fields to extract: timestamp, username, host, cmdline, pid, path, parent, signing_id
| FILTER records where path equals ""/usr/bin/plutil""
| GROUP records by username, host, cmdline, pid, path, parent, signing_id
| COMPUTE count of records per group, earliest(timestamp) as firstTime, latest(timestamp) as lastTime
| RENAME username to user, cmdline to process, path to process_path, host to dest
| FORMAT firstTime and lastTime into human-readable timestamps
| OUTPUT user, dest, process, process_path, pid, parent, signing_id, count, firstTime, lastTime"
Linux Possible Append Command To At Allow Config File,
Windows Impair Defense Disable Controlled Folder Access,
Windows Unusual Process Load Mozilla NSS-Mozglue Module,"SEARCH events from Windows Sysmon Module Load (Event ID 7) data source
| FILTER records where loaded module path (field: ImageLoaded) contains ""\mozglue.dll"" OR ""\nss3.dll""
| FILTER OUT records where process executable path (field: process_path) matches any of:
  "":\Program Files\Mozilla Firefox\firefox.exe"",
  "":\Program Files (x86)\Mozilla Firefox\firefox.exe"",
  "":\Program Files\Mozilla Thunderbird\thunderbird.exe"",
  "":\Program Files (x86)\Mozilla Thunderbird\thunderbird.exe"",
  ""*\Tor Browser\Browser\firefox.exe"",
  "":\Program Files\Code42\CrashPlan\Code42Service.exe"",
  "":\Program Files (x86"
WinEvent Scheduled Task Created to Spawn Shell,"SEARCH Windows Security Event Log records where event_id equals 4698 (Scheduled Task Created) |
PARSE fields needed for analysis: timestamp, Computer, TaskName, TaskContent |
FILTER records where TaskContent (case-insensitive) contains any of the following substrings: ""powershell.exe"", ""pwsh.exe"", ""cmd.exe"", ""wscript.exe"", ""cscript.exe"", ""scrcons.exe"", ""bash.exe"", ""sh.exe"", ""ksh.exe"", ""zsh.exe"" |
GROUP records by Computer, TaskName, TaskContent |
COMPUTE for each group: event_count, firstTime as minimum timestamp, lastTime as maximum timestamp |
FORMAT firstTime and lastTime as human-readable datetimes |
FILTER OUT groups that match organization-approved allowlists (for example, known benign TaskName or TaskContent patterns), if such allowlists are provided |
OUTPUT fields: Computer, TaskName, TaskContent, event_count, firstTime, lastTime"
Windows DNS Query Request To TinyUrl,"SEARCH Windows Sysmon DNS query events where EventCode equals 22
| FILTER records where QueryName equals ""tinyurl.com""
| FILTER records where Image path matches any of:
  - ""*\AppData\*""
  - ""*\Perflogs\*""
  - ""*\ProgramData\*""
  - ""*\Temp\*""
  - ""*\Users\Public\*""
  - ""*\Windows\Tasks\*""
| GROUP records by answer, answer_count, dvc, process_exec, process_guid, process_name, query, query_count, reply_code_id, signature, signature_id, src, user_id, vendor_product, QueryName, QueryResults, QueryStatus
| COMPUTE for each group: count = number of records, firstTime = minimum event_time, lastTime = maximum event_time
| DERIVE firstTime_readable and lastTime_readable from firstTime and lastTime using human-readable datetime formatting
| APPLY organization-specific suppression/allowlist filters to remove known benign matches (e.g., approved processes or hosts)
| OUTPUT fields: answer, answer_count, dvc, process_exec, process_guid, process_name, query, query_count, reply_code_id, signature, signature_id, src, user_id, vendor_product, QueryName, QueryResults, QueryStatus, count, firstTime, lastTime, firstTime_readable, lastTime_readable"
Detect Remote Access Software Usage Registry,"SEARCH registry value modification events from endpoint telemetry (e.g., Windows registry “SetValue” activity such as Sysmon Event ID 13) |
FILTER events where registry_path contains ""\Microsoft\Windows\CurrentVersion\Run"" OR (registry_path contains ""\SYSTEM\CurrentControlSet\Services\"" AND registry_value_name equals ""ImagePath"") |
GROUP by action, dest, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_data, registry_value_name, registry_value_type, status, user, vendor_product; DERIVE count = number of events in group, firstTime = earliest event timestamp in group, lastTime = latest event timestamp in group, latest_process_guid = process_guid from the most recent event in group |
FORMAT firstTime and lastTime as human-readable timestamps |
PARSE registry_value_data to extract file_name_1 as the last path component with an extension (handles quoted or unquoted paths) |
PARSE registry_value_data to extract file_name_2 as the trailing token with an extension if file_name_1 is not present |
DERIVE file_name = first non-null of file_name_1 and file_name_2 |
ENRICH each record by matching file_name against a reference list of known remote access utilities; ADD fields isutility, signature, desc, category from the reference |
FILTER records where isutility equals true |
APPLY exception rules to remove known-approved software/hosts/users/paths for remote access utilities within the environment |
APPLY any additional environment-specific filter logic for this detection |
OUTPUT firstTime, lastTime, dest, user, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, file_name, signature, category, process_id, latest_process_guid, status, vendor_product, count"
Windows Service Creation on Remote Endpoint,
Firewall Allowed Program Enable,"SEARCH process-creation events from sources: Sysmon Event ID 1, Windows Security 4688, CrowdStrike Process telemetry within the analysis interval |
PARSE each event to extract: timestamp, host, user and user_id, process_name, process_path, process_id, process_guid, command-line/arguments text, process_hash, process_integrity_level, original_file_name, action (if present), parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process (full command), parent_process_exec (binary path), vendor_product |
FILTER to retain only events where the command-line/arguments text contains all of the following terms (case-insensitive, substring match): ""firewall"", ""allow"", ""add"", ""enable"" |
GROUP events by the following attributes to form distinct activity tuples: action, host, original_file_name, parent_process (full command), parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process (full command), process_exec (binary path), process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product |
COMPUTE for each group: event_count, earliest timestamp as firstTime, latest timestamp as lastTime |
FORMAT firstTime and lastTime as human-readable timestamps |
APPLY optional environment-specific allowlist to exclude known benign administrative tools, accounts, or hosts (if defined) |
OUTPUT the grouped attributes along with event_count, firstTime, and lastTime"
Check Elevated CMD using whoami,"SEARCH process execution events from endpoint and Windows process-creation telemetry (e.g., Sysmon ProcessCreate, Windows Security 4688, EDR process events) |
FILTER event_type equals process_creation or process_start |
FILTER process.command_line contains ""whoami"" (case-insensitive) |
FILTER process.command_line contains ""/group"" (case-insensitive) |
FILTER process.command_line contains ""find"" (case-insensitive) |
FILTER process.command_line contains ""12288"" (case-insensitive) |
GROUP BY
- outcome/action (if available),
- host/device,
- process.original_file_name (if available),
- parent_process.command_line,
- parent_process.executable,
- parent_process.guid,
- parent_process.id,
- parent_process.name,
- parent_process.path,
- process.command_line,
- process.executable,
- process.guid,
- process.hash,
- process.id,
- process.integrity_level,
- process.name,
- process.path,
- user.account,
- user.id,
- product/vendor
|
AGGREGATE per group: event_count = count(),"
Windows Command Shell DCRat ForkBomb Payload,
Windows Hunting System Account Targeting Lsass,"SEARCH process access telemetry from host-based monitoring corresponding to Sysmon ProcessAccess events (EventID equals 10)
| PARSE fields: CallTrace, EventID, GrantedAccess, Guid, Opcode, ProcessID, SecurityID, SourceImage, SourceProcessGUID, SourceProcessId, TargetImage, TargetProcessGUID, TargetProcessId, UserID, dest, granted_access, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product, event_time
| FILTER records where TargetImage ends with ""lsass.exe"" (case-insensitive match)
| GROUP records by: CallTrace, EventID, GrantedAccess, Guid, Opcode, ProcessID, SecurityID, SourceImage, SourceProcessGUID, SourceProcessId, TargetImage, TargetProcessGUID, TargetProcessId, UserID, dest, granted_access, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product
| COMPUTE for each group: count as event_count, min(event_time) as firstTime, max(event_time) as lastTime
| DERIVE firstTime_readable = convert_timestamp_to_readable(firstTime), lastTime_readable = convert_timestamp_to_readable(lastTime)
| APPLY environment-specific allowlist/suppression filters to exclude known benign sources or tools
| OUTPUT all group-by fields"
Remote WMI Command Attempt,
Linux Sudoers Tmp File Creation,"SEARCH filesystem activity events with fields: event_time, dest, file_path, file_name, action, user, process_id, process_guid, file_access_time, file_create_time, file_modify_time, file_hash, file_acl, file_size, vendor_product
| FILTER records where file_path contains ""sudoers.tmp"" OR file_name equals ""sudoers.tmp""
| GROUP records BY action, dest, file_access_time, file_create_time, file_hash, file_modify_time, file_name, file_path, file_acl, file_size, process_guid, process_id, user, vendor_product
| COMPUTE count = number_of_records_in_group, firstTime = minimum(event_time), lastTime = maximum(event_time)
| DERIVE firstTime_readable"
Creation of Shadow Copy with wmic and powershell,"SEARCH endpoint process creation telemetry from Sysmon Event ID 1, Windows Security 4688, and EDR process events, collecting at minimum: event_time, host/device, user, user_id, process.command_line, process.executable_path, process.executable_basename, process.original_file_name, process.id, process.guid, process.hash"
Wsmprovhost LOLBAS Execution Process Spawn,"SEARCH endpoint process-creation telemetry over the selected time range, selecting at minimum: event_time, action, dest (host), user, user_id, vendor_product, process_name, process_path, process_id, process_guid, process_hash, process (command line), process_exec (executable path), process_integrity_level, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process, parent_process_exec
| FILTER events where action denotes a process start
| FILTER events where parent_process_name equals ""wsmprovhost.exe"" (case"
Windows Known Abused DLL Created,
Recon Using WMI Class,"SEARCH PowerShell Script Block Logging events | FILTER EventCode equals 4104 | FILTER ScriptBlockText contains either ""SELECT"" or ""Get-WmiObject"" | FILTER ScriptBlockText contains any of [""Win32_Bios"",""Win32_OperatingSystem"",""Win32_Processor"",""Win32_ComputerSystem"",""Win32_PnPEntity"",""Win32_ShadowCopy"",""Win32_DiskDrive"",""Win32_PhysicalMemory"",""Win32_BaseBoard"",""Win32_DisplayConfiguration""] | APPLY default placeholder values to missing fields among [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] | GROUP records by [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText]; COMPUTE count of records as count, earliest event time as firstTime, latest event time as lastTime | DERIVE human-readable timestamps from firstTime and lastTime | APPLY environment-specific allowlist/suppression rules to reduce known benign results | OUTPUT grouped fields plus count, firstTime, lastTime, and their human-readable forms"
PowerShell Start-BitsTransfer,"SEARCH process-creation events from Endpoint/EDR data sources (e.g., Sysmon Event ID 1, Windows Security 4688, EDR process telemetry) within the requested time range | PARSE each record to extract: event_time, action, destination_host, original_file_name, process_command_line, process_executable, process_name, process_path, process_id, process_guid, process_hash, process_integrity_level, user, user_id, vendor_product, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_executable, parent_process_command_line | FILTER records where process_command_line contains ""start-bitstransfer"" (case-insensitive) | FILTER records where the process represents a PowerShell interpreter (e.g., process_executable or process_name indicates PowerShell, or process_command_line begins with/launches PowerShell) | GROUP records BY action, destination_host, original_file_name, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_process_executable, parent_process_command_line, process_command_line, process_executable, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product | COMPUTE count = number of records in each group, firstTime = earliest(event_time), lastTime = latest(event_time) | DERIVE firstTime_readable and lastTime_readable as human-readable representations of firstTime and lastTime | APPLY environment-specific allowlists or suppression rules to exclude known benign/expected uses of Start-BitsTransfer (e.g"
Windows Anonymous Pipe Activity,"SEARCH Windows endpoint telemetry that records pipe creation/connection events (e.g., data sources equivalent to Windows Sysmon Event IDs 17 and 18) |
PARSE fields: host (dest), timestamp, EventCode, EventType, PipeName, ProcessGuid, ProcessId, Image (full executable path) |
FILTER events where EventCode is 17 or 18 |
FILTER events where EventType is ""CreatePipe"" or ""ConnectPipe"" |
FILTER events where PipeName contains the substring ""Anonymous Pipe"" |
FILTER events where Image path does NOT contain ""\Program Files\"" |
GROUP by host, EventCode, EventType, PipeName, ProcessGuid, ProcessId, Image; COMPUTE count of events, earliest timestamp as firstTime, latest timestamp as lastTime |
DERIVE human-readable versions of firstTime and lastTime |
APPLY optional environment-specific allowlist/suppression to remove known benign anonymous pipe activity (e.g., expected services, installers, or security tools) |
OUTPUT host, EventCode, EventType, PipeName, ProcessGuid, ProcessId, Image, firstTime, lastTime, count"
Linux Visudo Utility Execution,"SEARCH process execution events from Linux endpoint telemetry within the desired time range
| FILTER records where process_name equals 'visudo'
| GROUP BY action, host, original_file_name, parent_process_command_line, parent_process_executable, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_command_line, process_executable, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product
| COMPUTE event_count = count of records per group, first_seen_time = minimum event_time per group, last_seen_time = maximum event_time per group
| FORMAT first_seen_time and last_seen_time as human-readable timestamps
| APPLY optional environment-specific suppression to remove known benign or approved visudo executions (e.g., approved admin accounts or maintenance windows)
| OUTPUT action, host, original_file_name, parent_process_command_line, parent_process_executable, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_command_line, process_executable, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product, event_count, first_seen_time, last_seen_time"
Windows Archived Collected Data In TEMP Folder,"SEARCH filesystem activity events from Windows endpoints containing at least: event_time, file_name, file_path, action, dest (hostname), file_access_time, file"
Windows App Layer Protocol Qakbot NamedPipe,
Windows Impair Defenses Disable AV AutoStart via Registry,
Windows Apache Benchmark Binary,"SEARCH process creation events from the following data sources: Sysmon EventID 1, Windows Security Event ID "
Windows Multiple Accounts Deleted,"SEARCH Windows Security Event Log data
| FILTER records where EventCode equals 4726 and status equals ""success""
| DERIVE time_window as the 10-minute interval for each record based on event timestamp
| GROUP records by time_window, EventCode, signature, src_user, SubjectDomainName, TargetDomainName, Logon_ID
| COMPUTE total_deletions as count of records in group, unique_users as count of distinct user, deleted_users as list of distinct user, destinations as list of distinct dest
| FILTER groups where unique_users is greater than 5
| OUTPUT time_window, EventCode, signature, src_user, SubjectDomainName, TargetDomainName, Logon_ID, total_deletions, unique_users, deleted_users, destinations"
Suspicious SQLite3 LSQuarantine Behavior,"SEARCH process execution telemetry from endpoint/EDR logs
| FILTER events where process_name equals ""sqlite3""
| FILTER events where process (command_line) contains the substring ""LSQuarantine""
| GROUP records by action, dest, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product
| COMPUTE event_count = count of records per group, first_time = minimum event timestamp per group"
Linux Service File Created In Systemd Directory,
Detect HTML Help Renamed,
GetAdComputer with PowerShell Script Block,"SEARCH PowerShell Script Block Logging events where event code equals 4104
| FILTER records where ScriptBlockText contains the substring ""Get-AdComputer"" (case-insensitive)
| PARSE fields needed for analysis: timestamp, dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText
| HANDLE MISSING FIELDS by replacing nulls with empty values for the parsed fields
| GROUP records BY dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText
| COMPUTE event_count as the number of records in each group, firstTime as the earliest timestamp in each group, lastTime as the latest timestamp in each group
| FORMAT firstTime and lastTime as human-readable timestamps
| APPLY environment-specific allowlists or noise-reduction rules for known benign Get-AdComputer usage
| OUTPUT event_count, firstTime, lastTime, dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText"
Rundll32 Create Remote Thread To A Process,"SEARCH endpoint telemetry that records remote thread creation events (for example, CreateRemoteThread events such as Sysmon EventCode 8)
| FILTER event_code equals 8 (CreateRemoteThread)
| FILTER source_process.image_path ends with ""\rundll32.exe"" (case-insensitive)
| FILTER target_process.image_path ends with "".exe"" (case-insensitive)
| GROUP BY event_id, event_guid, host, user_sid, user_name, source_process.image_path, source_process.pid, source_process.guid, target_process.image_path, target_process.pid, target_process.guid, new_thread.id, start.address, start.function, start.module
| COMPUTE event_count = count(), first_seen = min(event_time), last_seen = max(event_time)
| DERIVE first_seen_readable and last_seen_readable from first_seen and last_seen
| APPLY environment-specific allowlist/suppression to remove known-benign rundll32 remote thread creations
| OUTPUT event_count, first_seen, last_seen, first_seen_readable, last_seen_readable, event_id, event_guid, host, user_sid, user_name, source_process.image_path, source_process.pid, source_process.guid, target_process.image_path, target_process.pid, target_process.guid, new_thread.id, start.address, start.function, start.module"
Windows Impair Defense Disable Web Evaluation,"SEARCH endpoint registry modification events
| FILTER registry.path contains ""\Windows\CurrentVersion\AppHost\EnableWebContentEvaluation""
| FILTER registry.value_data equals ""0x00000000""
| FILTER event.action indicates a registry value was set or written (e.g., SetValue/Write/Modify)
| GROUP BY action, host, process.guid, process.id, registry.hive, registry.path, registry.key_name, registry.value_name, registry.value_type, registry.value_data, status, user, product
| COMPUTE event_count = count(), first_seen = earliest(timestamp), last_seen = latest(timestamp)
| DERIVE first_seen_readable = to_readable_time(first_seen), last_seen_readable = to_readable_time(last_seen)
| OUTPUT first_seen_readable, last_seen_readable, event_count, action, host, process.guid, process.id, registry.hive, registry.path, registry.key_name, registry.value_name, registry.value_type, registry.value_data, status, user, product"
Detect Renamed WinRAR,"SEARCH process creation events from endpoint telemetry sources (e.g., Sysmon Event ID 1, Windows Security 4688, EDR process data such as CrowdStrike) |
PARSE fields: timestamp, host (destination), action, user, user_id, vendor_product, process_id, process_guid, process_name, process_path, process (full command line), process_exec (executable name), process_hash, process_integrity_level, original_file_name, parent_process, parent_process_id, parent_process_guid, parent_process_name, parent_process_path, parent_process_exec |
FILTER events where original_file_name equals ""WinRAR.exe"" |
FILTER events where process_name is not equal to ""rar.exe"" and not equal to ""winrar.exe"" (case-insensitive comparison) |
GROUP events by action, host, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product |
COMPUTE event_count = number of events per group, firstTime = earliest timestamp in group, lastTime = latest timestamp in group |
FORMAT firstTime and lastTime as human-readable timestamps |
APPLY optional environment-specific suppression filters to exclude known legitimate renamed WinRAR executions |
OUTPUT grouped records with event_count, firstTime, lastTime, and all grouping fields"
Windows System Discovery Using ldap Nslookup,"SEARCH endpoint process creation telemetry from Sysmon Event ID 1, Windows Security Event ID 4688, and EDR process data within the desired time range
| PARSE each event to extract at least: event_time, destination_host, action/disposition, process_name, original_file_name, command_line, process_executable_path, process_id, process_guid, process_hash, process_integrity_level, user, user_id, vendor_product, parent_process_name, parent_process_path, parent_process_id, parent_process_guid, parent_command_line
| FILTER events where process_name equals ""nslookup.exe"" OR original_file_name equals ""nslookup.exe""
| FILTER events where command_line contains the substring ""_ldap._tcp.dc._msdcs""
| GROUP records by: action/disposition, destination_host, original_file_name, parent_process_name, parent_process_path, parent_process_guid, parent_process_id, parent_command_line, command_line, process_executable_path, process_guid, process_hash, process_id, process_integrity_level, process_name, user, user_id, vendor_product
| COMPUTE for each group: event_count, first_seen_time = minimum(event_time), last_seen_time = maximum(event_time)
| FORMAT first_seen_time and last_seen_time into human-readable timestamps
| APPLY optional allowlist-based filtering to exclude known-administrative or expected nslookup usage (e.g., approved hosts, users, parent processes, or signed paths)
| OUTPUT the grouped records with event_count, first_seen_time, last_seen_time, and all grouping fields"
Windows Security Account Manager Stopped,"SEARCH process execution events from the following sources within the requested time range: Sysmon Event ID 1, Windows Security 4688, EDR process telemetry (e.g., CrowdStrike ProcessRollup2)
| FILTER events to those where process.name matches the pattern ""net*.exe"" (case-insensitive)
| FILTER events to those where process.command_line contains both the token ""stop"" and the token ""samss"" (case-insensitive; ""samss"" may be quoted); ensure both tokens appear in the same command line
| GROUP events by the following attributes: action, host, vendor_product, process.name, process.path, process.executable, process.command_line, process.id, process.guid, process.hash, process.integrity_level, parent_process.name, parent_process.path, parent_process.executable, parent_process.command_line, parent_process.id, parent_process.guid, user.name, user.id
| COMPUTE per group: event_count = number of events, first_seen = earliest event time, last_seen = latest event time
| FORMAT first_seen and last_seen as human-readable timestamps
| APPLY optional allowlist/suppression rules to exclude known administrative or expected executions
| OUTPUT one record per group including all grouping attributes plus event_count, first_seen, and last_seen"
Suspicious Curl Network Connection,"SEARCH process execution telemetry from endpoint sensors (e.g., EDR, Sysmon, Windows Security, CrowdStrike) within the desired time window
| PARSE each event to extract: event_time, action, dest (host/device), file.original_name, process.name, process.path, process.id, process.guid, process.hash, process.command_line, process.executable, process.integrity_level, user.name, user.id, vendor.product, parent.process.name, parent.process.path, parent.process.id, parent.process.guid, parent.process.executable
| FILTER where process.name equals ""curl"" (case-insensitive match on executable basename)
| FILTER where process.command_line contains ""s3.amazonaws.com""
| GROUP BY action, dest, file.original_name, parent.process.name, parent.process.executable, parent.process.guid, parent.process.id, parent.process.path, process.command_line, process.executable, process.guid, process.hash, process.id, process.integrity_level, process.name, process.path, user.name, user.id, vendor.product
| COMPUTE count = number of events per group, first_time = minimum(event_time) per group, last_time = maximum(event_time) per group
| DERIVE first_time_readable = human_readable(first_time), last_time_readable = human_readable(last_time)
| APPLY environment-specific allowlists and suppression rules to exclude known-benign curl-to-S3 activity
| OUTPUT action, dest, file.original_name, parent.process.name, parent.process.executable, parent.process.guid, parent.process.id, parent.process.path, process.command_line,"
WMI Recon Running Process Or Services,"SEARCH records from PowerShell Script Block Logging where event identifier equals 4104 | FILTER records where ScriptBlockText contains (case-insensitive) the substring ""SELECT"" AND also contains either ""Win32_Process"" or ""Win32_Service"" | IMPUTE missing values in fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with empty string | GROUP records BY [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] | AGGREGATE for each group: compute event count, earliest timestamp as firstTime, latest timestamp as lastTime | FORMAT firstTime and lastTime into human-readable timestamps | APPLY allowlist/suppression rules to exclude known benign hosts, users, scripts, or tooling patterns from the aggregated results | OUTPUT [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, count, firstTime, lastTime]"
Windows Service Created with Suspicious Service Path,"SEARCH Windows System event records where event_id equals 7045 (service creation/install) |
FILTER records where ImagePath exists and ends with "".exe"" |
FILTER out records where ImagePath matches any allowed path patterns:
- any_drive:\Windows\*
- any_drive:\Program Files\*
- any_drive:\ProgramData\*
- paths under the SystemRoot directory (e.g., %SystemRoot%\*)
|
GROUP records by EventCode, ImagePath, ServiceName, ServiceType, StartType, Computer, UserID |
COMPUTE count of records per group as count, earliest event time as firstTime, latest event time as lastTime |
DERIVE dest = Computer |
FORMAT firstTime and lastTime as human-readable timestamps |
APPLY environment-specific allowlist/suppression for known benign services if available |
OUTPUT dest, EventCode, ServiceName, ServiceType, StartType, ImagePath, UserID, count, firstTime, lastTime"
Windows Modify Registry ValleyRat PWN Reg Entry,
GetWmiObject DS User with PowerShell,"SEARCH endpoint process creation/execution events from Sysmon Event ID 1, Windows Security Event ID 4688, and EDR process telemetry
| PARSE fields: event_time, action, dest (hostname), vendor_product, user, user_id, process_name, process_path, process_exec (image filename), process_id, process_guid, process_hash, process_integrity_level, command_line, original_file_name, parent_process_name, parent_process_path, parent_process"
Network Share Discovery Via Dir Command,"SEARCH Windows Security Event Logs for events with EventID = 5140 | PARSE fields: event_time, ShareName, IpAddress, ObjectType, SubjectUserName, SubjectDomainName, IpPort, AccessMask, Computer | FILTER ShareName ends with any of [""\\ADMIN$"", ""\\C$"", ""\\IPC$""] | FILTER AccessMask equals ""0x1"" | GROUP BY ShareName, IpAddress, ObjectType, SubjectUserName, SubjectDomainName, IpPort, AccessMask, Computer | COMPUTE firstTime = min(event_time), lastTime = max(event_time), count = total events in group | FORMAT firstTime and lastTime as human-readable timestamps | APPLY optional exclusion filters to remove known legitimate administrative activity"
Trickbot Named Pipe,"SEARCH endpoint telemetry capturing Windows named pipe events (e.g., Sysmon EventCode 17 or 18)
| FILTER events where PipeName matches the pattern ""\pipe\*lacesomepipe""
| GROUP BY dest, dvc, pipe_name, PipeName, Image, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product
| COMPUTE firstTime = earliest event timestamp per group, lastTime = latest event timestamp per group, eventCount = total number of events per group
| CONVERT firstTime and lastTime to human-readable datetime strings
| APPLY organization-defined allowlist to exclude known benign pipes, processes, or hosts (if available)
| OUTPUT firstTime, lastTime, eventCount, dest, dvc, pipe_name, PipeName, Image, process_exec, process_guid, process_id, process_name, process_path, signature, signature_id, user_id, vendor_product"
Disabled Kerberos Pre-Authentication Discovery With PowerView,
Excessive number of taskhost processes,
Windows Unusual NTLM Authentication Users By Source,"SEARCH events from NTLM Operational logs where event_code equals 8004 and fields SChannelName and WorkstationName are present |
PARSE fields into dest_name = SChannelName, workstation = WorkstationName, user = UserName, event_time = event timestamp |
DERIVE src = workstation with any leading backslash characters removed |
FILTER dest_name is not equal to src |
APPLY environment-specific allowlist or suppression filters to exclude known benign sources or patterns if available |
GROUP records BY src and COMPUTE total_events = count(records), firstTime = minimum(event_time), lastTime = maximum(event_time), unique_count = count of distinct values of uppercase(user) |
COMPUTE unique_avg = average(unique_count across all groups), unique_std = standard deviation of unique_count across all groups |
DERIVE upperBound_unique = "
Windows MSIExec Remote Download,"SEARCH process execution events from Windows and EDR telemetry (e.g., Sysmon, Windows Security 4688, EDR process logs) within the desired time range
| PARSE each event to extract: timestamp, host, action, vendor_product, process_name, process_path, command_line, process_id, process_guid, process_hash, process_integrity_level, original_file_name, parent_process_name, parent"
Windows IIS Components New Module Added,"SEARCH Windows IIS Configuration/Operational event logs
| PARSE fields: EventCode, OpCode, ComputerName, Message, event_time
| FILTER EventCode == 29
| GROUP BY OpCode, EventCode, ComputerName, Message
| COMPUTE count = number_of_events, firstTime = earliest(event_time), lastTime = latest(event_time)
| FORMAT firstTime, lastTime as human-readable timestamps
| FILTER out results matching allowlisted ComputerName or Message patterns (if such allowlists exist)
| OUTPUT fields: OpCode, EventCode, ComputerName, Message, count, firstTime, lastTime"
Clop Common Exec Parameter,
Detect Rundll32 Application Control Bypass - syssetup,
Windows Rundll32 Load DLL in Temp Dir,"SEARCH process creation telemetry from Windows endpoints (e.g., Sysmon Event ID 1) within the desired time range
| FILTER events where process_name equals ""rundll32.exe"" OR original_file_name equals ""rundll32.exe""
| FILTER events where process_command_line OR process_path contains a temporary directory path such as ""\Users\<user>\AppData\Local\Temp\"", ""\Windows\Temp\"", or ""\tmp\""
| FILTER events where process_command_line references a file with a "".dll"" extension (to increase fidelity)
| DERIVE target_dll_path by extracting the DLL path from process_command_line (e.g., the argument passed to rundll32 before the comma or first space after the executable)
| GROUP events by host, user, process_name, process_path, process_command_line, process_id, process_guid, parent_process_name, parent_process_id, parent_process_path, parent_process_guid, original_file_name, process_hash, process_integrity_level, vendor_product, action
| COMPUTE first_seen_time = earliest event time and last_seen_time = latest event time for each group
| FORMAT first_seen_time and last_seen_time as human-readable timestamps
| APPLY exclusion filters for known benign rundll32 usages (e.g., legitimate ordinal loads or approved software known to stage DLLs in temp locations)
| OUTPUT the grouped records with computed times and the grouped fields listed above"
Windows AD Domain Replication ACL Addition,"SEARCH Windows Security Event Log events where EventCode equals 5136 and ObjectClass equals ""domainDNS""
| GROUP events by ObjectClass, ObjectDN, OpCorrelationID, src_user, SubjectLogonId and AGGREGATE:
- earliest event time as time_first
- list of AttributeValue where OperationType indicates ""value deleted"" as old_value_list
- list of AttributeValue where OperationType indicates ""value added"" as new_value_list
| PARSE each entry in old_value_list to extract any substring contained within parentheses and COLLECT as old_ace_strings
| PARSE each entry in new_value_list"
Windows Disable Internet Explorer Addons,"SEARCH process creation events from any of the following data sources: Sysmon Event ID 1, Windows Security Event ID 4688, and EDR process start telemetry (e.g., CrowdStrike ProcessRollup2) |
FILTER events where process_name equals ""iexplore.exe"" OR original_file_name equals ""IEXPLORE.EXE"" |
FILTER events where command_line contains the token ""-extoff"" (case-insensitive) |
GROUP events by action, host/device, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, command_line, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path, user, user_id, vendor_product |
COMPUTE firstTime = minimum event_time per group, lastTime = maximum event_time per group |
FORMAT firstTime and lastTime as human-readable timestamps |
APPLY optional allowlist/suppression to exclude known legitimate troubleshooting or sanctioned tasks (e.g., specific admin users, scheduled tasks, or management tools) |
OUTPUT one record per group including all grouped fields plus firstTime and lastTime"
Linux PHP Privilege Escalation,
NET Profiler UAC bypass,"SEARCH registry value modification events (for example, Windows Sysmon Event ID 13) and collect fields: timestamp, action, endpoint, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product | FILTER records where registry_path contains ""\Environment\COR_PROFILER_PATH"" (case-insensitive) | FILTER records where registry_value_data matches a file path ending in "".dll"" (case-insensitive) | GROUP records by action, endpoint, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product | COMPUTE eventCount = count of records per group, firstTime = earliest timestamp per group, lastTime = latest timestamp per group | FORMAT firstTime and lastTime as human-readable timestamps | APPLY environment-specific suppression rules to exclude known-benign COR_PROFILER_PATH modifications (if available) | OUTPUT action, endpoint, process_guid, process_id, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product, eventCount, firstTime, lastTime"
High Process Termination Frequency,"SEARCH events representing process termination (e.g., Sysmon Event ID 5) AND FILTER where EventCode equals 5
| WINDOW events into 3-second time buckets based on event timestamp
| GROUP records by [time_bucket, dest, EventCode, ProcessID, signature, signature_id, vendor_product]
| AGGREGATE within each group:
  - collect unique values of [process, process_exec, process_guid, process_id, process_name, process_path, user_id]
  - compute earliest timestamp as firstTime
  - compute latest timestamp as lastTime
  - compute total event count as count
| FILTER groups where count is greater than or equal to 15
| FORMAT firstTime and lastTime as human-readable timestamps
| OUTPUT time_bucket, dest, EventCode, ProcessID, signature, signature_id, vendor_product, count, firstTime, lastTime, and the collected unique value lists for process-related and user fields"
Windows MSIExec DLLRegisterServer,"SEARCH process start events from endpoint telemetry (e.g., Sysmon, Windows Security, EDR) within the desired time window, extracting at minimum: event_time, host, event.action, source_product, user.name, user.id, process.id, process.guid, process.name, process.original_file_name, process.path, process.command_line, process.hash, process.integrity_level, parent.id, parent.guid, parent.name, parent.path, parent.command_line, parent.executable
| PARSE process.command_line into tokens/switches preserving quotes and case-insensitive matching
| FILTER where process.name equals ""msiexec.exe"" (case-insensitive) OR process.original_file_name equals ""msiexec.exe"" OR process.path ends with ""\msiexec.exe"" (case-insensitive)
| FILTER where parsed command-line tokens include ""/y"" OR ""-y"" as standalone switches (not part of a file path or argument value)
| GROUP BY host, event.action, source_product, user.name, user.id, process.id, process.guid, process.name, process.original_file_name, process.path, process.command_line, process.hash, process.integrity_level, parent.id, parent.guid, parent.name, parent.path, parent.command_line
| COMPUTE count = number of matching events per group; first_seen = minimum(event_time) per group; last_seen = maximum(event_time) per group
| DERIVE human_readable_first_seen and human_readable_last_seen from first_seen and last_seen (timezone-aware)
| APPLY optional suppression to remove known benign software or administrative patterns relevant to msiexec usage with /y (e.g., approved installers or management tools)
| OUTPUT grouped records with count, first_seen/last_seen (and human-readable equivalents), and all grouped context fields"
Windows Impair Defense Disable Win Defender Compute File Hashes,"SEARCH endpoint registry modification events within the chosen time range
| PARSE fields from each event: timestamp, host, user, action, process_name, process_id, process_guid, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, vendor_product
| FILTER action indicates a write/set/create to a registry value
| FILTER registry_value_name equals ""EnableFileHashComputation""
| FILTER registry_path contains ""\Windows Defender\MpEngine\EnableFileHashComputation""
| FILTER registry_value_data indicates disabled (equals 0 or equals ""0x00000000"" in hexadecimal)
| GROUP events by host, process_guid, process_id, action, registry_hive, registry_path, registry_key_name, registry_value_name, registry_value_type, registry_value_data, status, user, vendor_product
| COMPUTE count_of_events per group
| COMPUTE first_observed_time as the minimum timestamp per group
| COMPUTE last_observed_time as the maximum timestamp per group
| DERIVE human_readable_first_observed_time from first_observed_time
| DERIVE human_readable_last_observed_time from last_observed_time
| APPLY optional allowlist to remove known expected or administrative changes (e.g., approved hosts, users, or processes)
| OUTPUT fields: host,"
Windows Service Initiation on Remote Endpoint,
Windows Security Support Provider Reg Query,"SEARCH endpoint process and registry-access telemetry from sources [Sysmon Event ID 1, Windows Security 4688, EDR process telemetry] selecting fields: timestamp, host/device, action, vendor_product, user, user_id, original_file_name, process_name, process_path, process_exec, process_id, process_guid, process_hash, process_integrity_level, process_command_line, parent_process_name, parent_process_path, parent_process_exec, parent_process_id, parent_process_guid, parent_process (full command)
| FILTER events where action indicates a process performing a registry read/query or registry access
| FILTER events where process_command_line contains the substring ""query"" (case-insensitive)
| FILTER events where process_command_line contains the registry path substring ""SYSTEM\CurrentControlSet\Control\LSA"" (case-insensitive)
| FILTER events where process_command_line contains either ""RunAsPPL"" or ""LsaCfgFlags""
| GROUP BY action, host/device, vendor_product, user, user_id, original_file_name, parent_process, parent_process_exec, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, process_command_line, process_exec, process_guid, process_hash, process_id, process_integrity_level, process_name, process_path
| DERIVE first_time = earliest(timestamp) per group
| DERIVE last_time = latest(timestamp) per group
| DERIVE event_count = count(events) per group
| DERIVE first_time_readable and last_time_readable as human-readable representations of first_time and last_time
| OUTPUT all grouped fields with event_count, first_time, last_time, first_time_readable, last_time_readable"
Linux Possible Access To Sudoers File,
Time Provider Persistence Registry,"SEARCH registry activity telemetry events | FILTER events where registry.path contains ""\CurrentControlSet\Services\W32Time\TimeProviders"" | GROUP BY action, host, process.guid, process.id, registry.hive, registry.path, registry.key_name, registry.value_name, registry.value_type, registry.value_data, status, user, product | DERIVE event_count = count(), first_time = earliest(event_time), last_time = latest(event_time) | DERIVE first_time_readable = to_readable_time(first_time), last_time_readable = to_readable_time(last_time) | APPLY allowlist to exclude known benign hosts, processes, or registry values if available | OUTPUT host, action, process.guid, process.id, registry.hive, registry.path, registry.key_name, registry.value_name, registry.value_type, registry.value_data, status, user, product, event_count, first_time_readable, last_time_readable"
Attacker Tools On Endpoint,
System Processes Run From Unexpected Locations,"SEARCH endpoint process creation events on Windows hosts from EDR, Sysmon (Event ID 1), and Security (4688) over the desired time range
| PARSE each event to extract: timestamp, host, user, user_id, vendor_product, action (process start), process_guid, process_id, process_name, original_file_name (if available), process_path (full path to executable), process_command_line, process_hash, process_integrity_level, parent_process_guid, parent_process_id, parent_process_name, parent_process_path, parent_process_command_line
| DERIVE executable_filename = file name component of process_path (fallback to process_name if path missing)
| DERIVE candidate_system_name = original_file_name if present else executable_filename
| DERIVE is_windows_system_binary = candidate_system_name is a member of the maintained set of Windows system binary names (for example core OS executables)
| FILTER action indicates process creation/start AND operating system is Windows
| FILTER is_windows_system_binary = true
| FILTER process_path does NOT start with any of the expected Windows system directories:
  - ""C:\$WINDOWS.~BT\""
  - ""C:\$WinREAgent\""
  - ""C:\Windows\SoftwareDistribution\""
  - ""C:\Windows\System32\""
  - ""C:\Windows\SystemTemp\""
  - ""C:\Windows\Sys"
Interactive Session on Remote Endpoint with PowerShell,"SEARCH PowerShell Script Block Logging events
| FILTER records where event_code equals 4104
| FILTER records where ScriptBlockText contains ""Enter-PSSession"" AND ScriptBlockText contains ""-ComputerName"" (case-insensitive substring match)
| FILL missing values in fields [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText] with null
| GROUP records BY [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText]
| COMPUTE count = number of records per group, firstTime = earliest timestamp per group, lastTime = latest timestamp per group
| FORMAT firstTime and lastTime as human-readable timestamps
| APPLY optional allowlist/suppression rules to remove known benign activity
| OUTPUT [dest, signature, signature_id, user_id, vendor_product, EventID, Guid, Opcode, Name, Path, ProcessID, ScriptBlockId, ScriptBlockText, count, firstTime, lastTime]"
Linux Auditd Edit Cron Table Parameter,"SEARCH Linux Auditd Syscall events
| FILTER where record_type equals ""SYSCALL""
| FILTER where syscall is one of [""rename"", ""execve""]
| FILTER where (process_name equals ""crontab"" OR executable_path ends with ""/crontab"")
| FILTER where operation_outcome indicates success
| FILTER where user_identity is not ""daemon""
| RENAME field ""host"" to ""dest""
| GROUP BY process_name, executable_path, syscall, user_identity, parent_process_id, process_id, dest; COMPUTE event_count, firstTime = earliest event_time, lastTime = latest event_time
| DERIVE firstTimeReadable by converting firstTime to human-readable timestamp
| DERIVE lastTimeReadable by converting lastTime to human-readable timestamp
| APPLY optional environment allowlist to exclude known benign crontab activity per organizational policy
| OUTPUT dest, process_name, executable_path, syscall, user_identity, parent_process_id, process_id, event_count, firstTime, lastTime, firstTimeReadable, lastTimeReadable"
Windows Security And Backup Services Stop,"SEARCH Windows System event logs
| FILTER event_code equals 7036
| DERIVE display_name = param1, service_state = param2, host = computer_name_or_destination_field, service_name = internal_service_name_field_if_present
| FILTER service_state equals ""stopped""
|"
USN Journal Deletion,
Windows Protocol Tunneling with Plink,
Execute Javascript With Jscript COM CLSID,
Windows SQL Spawning CertUtil,"SEARCH process creation/execution events from endpoint and OS logs (e.g., EDR telemetry, Sysmon Event ID 1, Windows Security 4688) within the selected time range
| PARSE fields: event_time, device_hostname, action, vendor_product, user, user_id, process_name, process_path, process_command_line, process_original_file_name, process_executable, process_hash, process_integrity_level, process_id, process_guid, parent_process_name, parent_process_path, parent_process_command_line, parent_process_executable, parent_process_id, parent_process_guid
| FILTER events where parent_process_name is any of: ""sqlservr.exe"", ""sqlagent.exe"", ""sqlps.exe"", ""launchpad.exe"", ""sqldumper.exe"" (case-insensitive exact match)
| FILTER events where the spawned process is CertUtil by either: process_name equals ""certutil.exe"" OR process_original_file_name equals ""certutil.exe"" OR process_command_line contains ""certutil"" (case-insensitive)
| FILTER events where process_command_line contains ""urlcache"" OR contains ""verifyctl"" (case-insensitive)
| GROUP BY action, device_hostname, vendor_product, user, user_id, process_name, process_path, process_executable, process_command_line, process_original_file_name, process_hash, process_integrity_level, process_id, process_guid, parent_process_name, parent_process_path, parent_process_executable, parent_process_command_line, parent_process_id, parent_process_guid
| COMPUTE"
